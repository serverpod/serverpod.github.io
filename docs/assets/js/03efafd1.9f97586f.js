"use strict";(self.webpackChunkserverpod_docs=self.webpackChunkserverpod_docs||[]).push([[42105],{75749:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>u});const o=JSON.parse('{"id":"tutorials/tutorials/ai-and-rag","title":"Integrating AI & RAG","description":"Are you curious about how best to include AI in your Flutter app? In this talk, we will explore how you can use Serverpod to stream content generated by Gemini to your Flutter app in real-time. We will also dive into calling the Gemini APIs from Dart and linking them to your custom knowledge database using retrieval-augmented generation (RAG) and a vector database. We build a practical example where you can chat with the Flutter and Serverpod documentation, pulling in data from official docs, issues, and discussions on GitHub.","source":"@site/docs/05-tutorials/02-tutorials/03-ai-and-rag.md","sourceDirName":"05-tutorials/02-tutorials","slug":"/tutorials/tutorials/ai-and-rag","permalink":"/next/tutorials/tutorials/ai-and-rag","draft":false,"unlisted":false,"editUrl":"https://github.com/serverpod/serverpod_docs/tree/main/docs/05-tutorials/02-tutorials/03-ai-and-rag.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Real-time communication","permalink":"/next/tutorials/tutorials/real-time-communication"},"next":{"title":"Authentication","permalink":"/next/tutorials/guides/authentication"}}');var a=i(74848),n=i(28453);const r={},s="Integrating AI & RAG",l={},u=[];function c(e){const t={h1:"h1",header:"header",p:"p",...(0,n.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"integrating-ai--rag",children:"Integrating AI & RAG"})}),"\n",(0,a.jsx)(t.p,{children:"Are you curious about how best to include AI in your Flutter app? In this talk, we will explore how you can use Serverpod to stream content generated by Gemini to your Flutter app in real-time. We will also dive into calling the Gemini APIs from Dart and linking them to your custom knowledge database using retrieval-augmented generation (RAG) and a vector database. We build a practical example where you can chat with the Flutter and Serverpod documentation, pulling in data from official docs, issues, and discussions on GitHub."}),"\n",(0,a.jsx)("div",{style:{position:"relative",paddingBottom:"56.25%",height:"0"},children:(0,a.jsx)("iframe",{style:{position:"absolute",top:"0",left:"0",width:"100%",height:"100%"},width:"560",height:"315",src:"https://www.youtube-nocookie.com/embed/NJ9H1kmwhuE",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:!0})})]})}function d(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>s});var o=i(96540);const a={},n=o.createContext(a);function r(e){const t=o.useContext(n);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),o.createElement(n.Provider,{value:t},e.children)}}}]);