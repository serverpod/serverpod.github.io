"use strict";(self.webpackChunkserverpod_docs=self.webpackChunkserverpod_docs||[]).push([[45793],{66808:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"upgrading/upgrade-to-three","title":"Upgrade to 3.0","description":"Web Server: Widget to Component Rename","source":"@site/docs/08-upgrading/06-upgrade-to-three.md","sourceDirName":"08-upgrading","slug":"/upgrading/upgrade-to-three","permalink":"/next/upgrading/upgrade-to-three","draft":false,"unlisted":false,"editUrl":"https://github.com/serverpod/serverpod_docs/tree/main/docs/08-upgrading/06-upgrade-to-three.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Upgrading to pgvector support","permalink":"/next/upgrading/upgrade-to-pgvector"},"next":{"title":"Serverpod Insights","permalink":"/next/tools/insights"}}');var s=t(74848),d=t(28453);const o={},i="Upgrade to 3.0",a={},c=[{value:"Web Server: Widget to Component Rename",id:"web-server-widget-to-component-rename",level:2},{value:"1. Update Route Classes",id:"1-update-route-classes",level:3},{value:"2. Update Component Classes",id:"2-update-component-classes",level:3},{value:"3. Update Abstract Components",id:"3-update-abstract-components",level:3},{value:"4. Update Special Component Types",id:"4-update-special-component-types",level:3},{value:"5. Update Route Registration",id:"5-update-route-registration",level:3},{value:"Directory Structure",id:"directory-structure",level:3},{value:"Class Names",id:"class-names",level:3},{value:"Complete Example",id:"complete-example",level:3}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"upgrade-to-30",children:"Upgrade to 3.0"})}),"\n",(0,s.jsx)(n.h2,{id:"web-server-widget-to-component-rename",children:"Web Server: Widget to Component Rename"}),"\n",(0,s.jsx)(n.p,{children:'In Serverpod 3.0, all web server related "Widget" classes have been renamed to "Component" to better reflect their purpose and avoid confusion with Flutter widgets.'}),"\n",(0,s.jsx)(n.p,{children:"The following classes have been renamed:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Old Name"}),(0,s.jsx)(n.th,{children:"New Name"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Widget"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Component"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"AbstractWidget"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"AbstractComponent"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"WidgetRoute"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ComponentRoute"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"WidgetJson"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"JsonComponent"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"WidgetRedirect"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"RedirectComponent"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"WidgetList"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ListComponent"})})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"1-update-route-classes",children:"1. Update Route Classes"}),"\n",(0,s.jsxs)(n.p,{children:["Update all route classes that extend ",(0,s.jsx)(n.code,{children:"WidgetRoute"})," to extend ",(0,s.jsx)(n.code,{children:"ComponentRoute"}),", and rename them to follow the new naming convention:"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Before:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-dart",children:"class RouteRoot extends WidgetRoute {\n  @override\n  Future<Widget> build(Session session, HttpRequest request) async {\n    return MyPageWidget();\n  }\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"After:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-dart",children:"class RootRoute extends ComponentRoute {\n  @override\n  Future<Component> build(Session session, HttpRequest request) async {\n    return MyPageComponent();\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"2-update-component-classes",children:"2. Update Component Classes"}),"\n",(0,s.jsxs)(n.p,{children:["Update all classes that extend ",(0,s.jsx)(n.code,{children:"Widget"})," to extend ",(0,s.jsx)(n.code,{children:"Component"}),', and rename them from "Widget" to "Component":']}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Before:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-dart",children:"class MyPageWidget extends Widget {\n  MyPageWidget({required String title}) : super(name: 'my_page') {\n    values = {\n      'title': title,\n    };\n  }\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"After:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-dart",children:"class MyPageComponent extends Component {\n  MyPageComponent({required String title}) : super(name: 'my_page') {\n    values = {\n      'title': title,\n    };\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"3-update-abstract-components",children:"3. Update Abstract Components"}),"\n",(0,s.jsxs)(n.p,{children:["If you have custom abstract components, update them from ",(0,s.jsx)(n.code,{children:"AbstractWidget"})," to ",(0,s.jsx)(n.code,{children:"AbstractComponent"})," and rename accordingly:"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Before:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-dart",children:"class CustomWidget extends AbstractWidget {\n  @override\n  String toString() {\n    return '<html>...</html>';\n  }\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"After:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-dart",children:"class CustomComponent extends AbstractComponent {\n  @override\n  String toString() {\n    return '<html>...</html>';\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"4-update-special-component-types",children:"4. Update Special Component Types"}),"\n",(0,s.jsx)(n.p,{children:"Update references to special component types:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Before:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-dart",children:"// JSON responses\nreturn WidgetJson(object: {'status': 'success'});\n\n// Redirects\nreturn WidgetRedirect(url: '/login');\n\n// Component lists\nreturn WidgetList(widgets: [widget1, widget2]);\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"After:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-dart",children:"// JSON responses\nreturn JsonComponent(object: {'status': 'success'});\n\n// Redirects\nreturn RedirectComponent(url: '/login');\n\n// Component lists\nreturn ListComponent(widgets: [widget1, widget2]);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"5-update-route-registration",children:"5. Update Route Registration"}),"\n",(0,s.jsx)(n.p,{children:"Update your route registration to use the renamed route classes:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Before:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-dart",children:"pod.webServer.addRoute(RouteRoot(), '/');\npod.webServer.addRoute(RouteRoot(), '/index.html');\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"After:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-dart",children:"pod.webServer.addRoute(RootRoute(), '/');\npod.webServer.addRoute(RootRoute(), '/index.html');\n"})}),"\n",(0,s.jsx)(n.h3,{id:"directory-structure",children:"Directory Structure"}),"\n",(0,s.jsxs)(n.p,{children:["For consistency with the new naming convention, we recommend renaming your ",(0,s.jsx)(n.code,{children:"widgets/"})," directories to ",(0,s.jsx)(n.code,{children:"components/"}),". However, this is not strictly required - the directory structure can remain unchanged if needed."]}),"\n",(0,s.jsx)(n.h3,{id:"class-names",children:"Class Names"}),"\n",(0,s.jsxs)(n.p,{children:['For consistency and clarity, we recommend updating all class names from "Widget" to "Component" (e.g., ',(0,s.jsx)(n.code,{children:"MyPageWidget"})," \u2192 ",(0,s.jsx)(n.code,{children:"MyPageComponent"}),"). While you can keep your existing class names and only update the inheritance, following the new naming convention will make your code more maintainable and consistent with Serverpod's conventions."]}),"\n",(0,s.jsx)(n.h3,{id:"complete-example",children:"Complete Example"}),"\n",(0,s.jsx)(n.p,{children:"Here's a complete example of migrating a simple web page:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Before:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-dart",children:"// lib/src/web/widgets/default_page_widget.dart\nimport 'package:serverpod/serverpod.dart';\n\nclass DefaultPageWidget extends Widget {\n  DefaultPageWidget() : super(name: 'default') {\n    values = {\n      'served': DateTime.now(),\n      'runmode': Serverpod.instance.runMode,\n    };\n  }\n}\n\n// lib/src/web/routes/root.dart\nimport 'dart:io';\nimport 'package:my_server/src/web/widgets/default_page_widget.dart';\nimport 'package:serverpod/serverpod.dart';\n\nclass RouteRoot extends WidgetRoute {\n  @override\n  Future<Widget> build(Session session, HttpRequest request) async {\n    return DefaultPageWidget();\n  }\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"After:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-dart",children:"// lib/src/web/components/default_page_component.dart (renamed file and directory)\nimport 'package:serverpod/serverpod.dart';\n\nclass DefaultPageComponent extends Component {\n  DefaultPageComponent() : super(name: 'default') {\n    values = {\n      'served': DateTime.now(),\n      'runmode': Serverpod.instance.runMode,\n    };\n  }\n}\n\n// lib/src/web/routes/root.dart\nimport 'dart:io';\nimport 'package:my_server/src/web/components/default_page_component.dart';\nimport 'package:serverpod/serverpod.dart';\n\nclass RootRoute extends ComponentRoute {\n  @override\n  Future<Component> build(Session session, HttpRequest request) async {\n    return DefaultPageComponent();\n  }\n}\n\n// server.dart\npod.webServer.addRoute(RootRoute(), '/');\npod.webServer.addRoute(RootRoute(), '/index.html');\n"})})]})}function p(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>i});var r=t(96540);const s={},d=r.createContext(s);function o(e){const n=r.useContext(d);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(d.Provider,{value:n},e.children)}}}]);