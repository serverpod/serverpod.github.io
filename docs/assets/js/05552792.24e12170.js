"use strict";(self.webpackChunkserverpod_docs=self.webpackChunkserverpod_docs||[]).push([[5754],{37633:(n,e,o)=>{o.r(e),o.d(e,{assets:()=>c,contentTitle:()=>s,default:()=>l,frontMatter:()=>r,metadata:()=>d,toc:()=>i});var t=o(85893),a=o(11151);const r={},s="Upgrade to 2.0",d={id:"upgrading/upgrade-to-two",title:"Upgrade to 2.0",description:"Changes to the Session Object",source:"@site/docs/12-upgrading/01-upgrade-to-two.md",sourceDirName:"12-upgrading",slug:"/upgrading/upgrade-to-two",permalink:"/next/upgrading/upgrade-to-two",draft:!1,unlisted:!1,editUrl:"https://github.com/serverpod/serverpod_docs/tree/main/docs/12-upgrading/01-upgrade-to-two.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Contribute",permalink:"/next/contribute"},next:{title:"Upgrade to 1.2",permalink:"/next/upgrading/upgrade-to-one-point-two"}},c={},i=[{value:"Changes to the Session Object",id:"changes-to-the-session-object",level:2},{value:"Changes to database queries",id:"changes-to-database-queries",level:2},{value:"Modified return type for unsafeQueryMappedResults(...)",id:"modified-return-type-for-unsafequerymappedresults",level:3}];function p(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,a.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"upgrade-to-20",children:"Upgrade to 2.0"}),"\n",(0,t.jsx)(e.h2,{id:"changes-to-the-session-object",children:"Changes to the Session Object"}),"\n",(0,t.jsxs)(e.p,{children:["With Serverpod 2.0, we have removed the deprecated legacy database layer from the ",(0,t.jsx)(e.code,{children:"Session"})," object. The ",(0,t.jsx)(e.code,{children:"Session"})," object now incorporates the new database layer, accessed via the ",(0,t.jsx)(e.code,{children:"dbNext"})," field in Serverpod 1.2, under the ",(0,t.jsx)(e.code,{children:"db"})," field."]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-dart",children:"session.dbNext.find(...);\n"})}),"\n",(0,t.jsx)(e.p,{children:"becomes"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-dart",children:"session.db.find(...);\n"})}),"\n",(0,t.jsx)(e.h2,{id:"changes-to-database-queries",children:"Changes to database queries"}),"\n",(0,t.jsx)(e.h3,{id:"modified-return-type-for-unsafequerymappedresults",children:"Modified return type for unsafeQueryMappedResults(...)"}),"\n",(0,t.jsxs)(e.p,{children:["The return type for ",(0,t.jsx)(e.code,{children:"unsafeQueryMappedResults(...)"})," has been modified to better comply with the return type from the underlying database. The return type is now a list of maps, where each map contains the query alias for the column as key and the row-column value as value."]}),"\n",(0,t.jsx)(e.p,{children:"Given a query that performs a join like this:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:'SELECT\n "company"."id" AS "company.id",\n "company"."name" AS "company.name",\n "company"."townId" AS "company.townId",\n "company_town_town"."id" AS "company_town_town.id",\n "company_town_town"."name" AS "company_town_town.name",\n "company_town_town"."mayorId" AS "company_town_town.mayorId"\nFROM\n "company"\nLEFT JOIN\n "town" AS "company_town_town" ON "company"."townId" = "company_town_town"."id"\nORDER BY\n "company"."name"\n'})}),"\n",(0,t.jsx)(e.p,{children:"The return type in 1.2 was:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-json",children:'[\n  {\n    "company": {\n      "company.id": 40,\n      "company.name": "Apple",\n      "company.townId": 64\n    },\n    "town": {\n      "company_town_town.id": 64,\n      "company_town_town.name": "San Francisco",\n      "company_town_town.mayorId": null\n    }\n  },\n  {\n    "company": {\n      "company.id": 39,\n      "company.name": "Serverpod",\n      "company.townId": 63\n    },\n    "town": {\n      "company_town_town.id": 63,\n      "company_town_town.name": "Stockholm",\n      "company_town_town.mayorId": null\n    }\n  }\n]\n'})}),"\n",(0,t.jsx)(e.p,{children:"And now becomes:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-json",children:'[\n  {\n    "company.id": 38,\n    "company.name": "Apple",\n    "company.townId": 62,\n    "company_town_town.id": 62,\n    "company_town_town.name": "San Francisco",\n    "company_town_town.mayorId": null\n  },\n  {\n    "company.id": 37,\n    "company.name": "Serverpod",\n    "company.townId": 61,\n    "company_town_town.id": 61,\n    "company_town_town.name": "Stockholm",\n    "company_town_town.mayorId": null\n  }\n]\n'})}),"\n",(0,t.jsx)(e.p,{children:"or for a simple query without aliases:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:'SELECT\n "id",\n "name",\n "townId"\nFROM\n "company"\nORDER BY\n "name"\n'})}),"\n",(0,t.jsx)(e.p,{children:"the result in 1.2 was:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-json",children:'[\n  {\n    "company": {\n      "id": 54,\n      "name": "Apple",\n      "townId": 86\n    }\n  },\n  {\n    "company": {\n      "id": 53,\n      "name": "Serverpod",\n      "townId": 85\n    }\n  }\n]\n'})}),"\n",(0,t.jsx)(e.p,{children:"and now becomes:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-json",children:' [\n  {\n    "id": 54,\n    "name": "Apple",\n    "townId": 86\n  },\n  {\n    "id": 53,\n    "name": "Serverpod",\n    "townId": 85\n  }\n]\n'})})]})}function l(n={}){const{wrapper:e}={...(0,a.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(p,{...n})}):p(n)}},11151:(n,e,o)=>{o.d(e,{Z:()=>d,a:()=>s});var t=o(67294);const a={},r=t.createContext(a);function s(n){const e=t.useContext(r);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function d(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:s(n.components),t.createElement(r.Provider,{value:e},n.children)}}}]);