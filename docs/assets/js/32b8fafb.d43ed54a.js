"use strict";(self.webpackChunkserverpod_docs=self.webpackChunkserverpod_docs||[]).push([[92113],{40053:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"concepts/models","title":"Working with models","description":"Models are Yaml files used to define serializable classes in Serverpod. They are used to generate Dart code for the server and client, and, if a database table is defined, to generate database code for the server.","source":"@site/docs/06-concepts/02-models.md","sourceDirName":"06-concepts","slug":"/concepts/models","permalink":"/next/concepts/models","draft":false,"unlisted":false,"editUrl":"https://github.com/serverpod/serverpod_docs/tree/main/docs/06-concepts/02-models.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Working with endpoints","permalink":"/next/concepts/working-with-endpoints"},"next":{"title":"Custom serialization","permalink":"/next/concepts/serialization"}}');var d=t(74848),i=t(28453);const l={},r="Working with models",a={},c=[{value:"Class",id:"class",level:2},{value:"Required fields",id:"required-fields",level:3},{value:"Limiting visibility of a generated class",id:"limiting-visibility-of-a-generated-class",level:3},{value:"Exception",id:"exception",level:2},{value:"Enum",id:"enum",level:2},{value:"Default value",id:"default-value",level:3},{value:"Adding documentation",id:"adding-documentation",level:2},{value:"Vector fields",id:"vector-fields",level:2},{value:"Vector",id:"vector",level:3},{value:"HalfVector",id:"halfvector",level:3},{value:"SparseVector",id:"sparsevector",level:3},{value:"Bit",id:"bit",level:3},{value:"Generated code",id:"generated-code",level:2},{value:"copyWith",id:"copywith",level:3},{value:"toJson / fromJson",id:"tojson--fromjson",level:3},{value:"Custom methods",id:"custom-methods",level:3},{value:"Default Values",id:"default-values",level:2},{value:"Keywords",id:"keywords",level:3},{value:"How priorities work",id:"how-priorities-work",level:3},{value:"Supported default values",id:"supported-default-values",level:3},{value:"Boolean",id:"boolean",level:4},{value:"DateTime",id:"datetime",level:4},{value:"Double",id:"double",level:4},{value:"Duration",id:"duration",level:4},{value:"Enum",id:"enum-1",level:4},{value:"Integer",id:"integer",level:4},{value:"String",id:"string",level:4},{value:"UuidValue",id:"uuidvalue",level:4},{value:"Example",id:"example",level:3},{value:"Keywords",id:"keywords-1",level:2}];function o(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.header,{children:(0,d.jsx)(n.h1,{id:"working-with-models",children:"Working with models"})}),"\n",(0,d.jsx)(n.p,{children:"Models are Yaml files used to define serializable classes in Serverpod. They are used to generate Dart code for the server and client, and, if a database table is defined, to generate database code for the server."}),"\n",(0,d.jsxs)(n.p,{children:["Using regular ",(0,d.jsx)(n.code,{children:".yaml"})," files within ",(0,d.jsx)(n.code,{children:"lib/src/models"})," is supported, but it is recommended to use ",(0,d.jsx)(n.code,{children:".spy.yaml"}),' (.spy stands for "Serverpod YAML"). Using this file type allows placing the model files anywhere in your servers ',(0,d.jsx)(n.code,{children:"lib"})," directory and enables syntax highlighting provided by the ",(0,d.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=serverpod.serverpod",children:"Serverpod Extension"})," for VS Code."]}),"\n",(0,d.jsx)(n.p,{children:"The files are analyzed by the Serverpod CLI when generating the project and creating migrations."}),"\n",(0,d.jsxs)(n.p,{children:["Run ",(0,d.jsx)(n.code,{children:"serverpod generate"})," to generate dart classes from the model files."]}),"\n",(0,d.jsx)(n.h2,{id:"class",children:"Class"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-yaml",children:"class: Company\nfields:\n  name: String\n  foundedDate: DateTime?\n  employees: List<Employee>\n"})}),"\n",(0,d.jsxs)(n.p,{children:["Supported types are ",(0,d.jsx)(n.a,{href:"https://api.dart.dev/dart-core/bool-class.html",children:"bool"}),", ",(0,d.jsx)(n.a,{href:"https://api.dart.dev/dart-core/int-class.html",children:"int"}),", ",(0,d.jsx)(n.a,{href:"https://api.dart.dev/dart-core/double-class.html",children:"double"}),", ",(0,d.jsx)(n.a,{href:"https://api.dart.dev/dart-core/String-class.html",children:"String"}),", ",(0,d.jsx)(n.a,{href:"https://api.dart.dev/dart-core/Duration-class.html",children:"Duration"}),", ",(0,d.jsx)(n.a,{href:"https://api.dart.dev/dart-core/DateTime-class.html",children:"DateTime"}),", ",(0,d.jsx)(n.a,{href:"https://api.dart.dev/dart-typed_data/ByteData-class.html",children:"ByteData"}),", ",(0,d.jsx)(n.a,{href:"https://pub.dev/documentation/uuid/latest/uuid_value/UuidValue-class.html",children:"UuidValue"}),", ",(0,d.jsx)(n.a,{href:"https://api.dart.dev/dart-core/Uri-class.html",children:"Uri"}),", ",(0,d.jsx)(n.a,{href:"https://api.dart.dev/dart-core/BigInt-class.html",children:"BigInt"}),", ",(0,d.jsx)(n.a,{href:"#vector",children:"Vector"}),", ",(0,d.jsx)(n.a,{href:"#halfvector",children:"HalfVector"}),", ",(0,d.jsx)(n.a,{href:"#sparsevector",children:"SparseVector"}),", ",(0,d.jsx)(n.a,{href:"#bit",children:"Bit"})," and other serializable ",(0,d.jsx)(n.a,{href:"#class",children:"classes"}),", ",(0,d.jsx)(n.a,{href:"#exception",children:"exceptions"})," and ",(0,d.jsx)(n.a,{href:"#enum",children:"enums"}),". You can also use ",(0,d.jsx)(n.a,{href:"https://api.dart.dev/dart-core/List-class.html",children:"List"}),"s, ",(0,d.jsx)(n.a,{href:"https://api.dart.dev/dart-core/Map-class.html",children:"Map"}),"s and ",(0,d.jsx)(n.a,{href:"https://api.dart.dev/dart-core/Set-class.html",children:"Set"}),"s of the supported types, just make sure to specify the types. All supported types can also be used inside ",(0,d.jsx)(n.a,{href:"https://api.dart.dev/dart-core/Record-class.html",children:"Record"}),"s. Null safety is supported. Once your classes are generated, you can use them as parameters or return types to endpoint methods."]}),"\n",(0,d.jsx)(n.h3,{id:"required-fields",children:"Required fields"}),"\n",(0,d.jsxs)(n.p,{children:["Nullable types are supported by adding a ",(0,d.jsx)(n.code,{children:"?"})," after the type. E.g., ",(0,d.jsx)(n.code,{children:"String?"})," or ",(0,d.jsx)(n.code,{children:"List<Employee>?"}),". The optional ",(0,d.jsx)(n.code,{children:"required"})," keyword makes the generated field a required constructor parameter."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-yaml",children:"class: Person\nfields:\n  name: String\n  nickname: String?, required\n  age: int?\n"})}),"\n",(0,d.jsxs)(n.p,{children:["In the example above, ",(0,d.jsx)(n.code,{children:"nickname"})," will be a required constructor parameter."]}),"\n",(0,d.jsx)(n.h3,{id:"limiting-visibility-of-a-generated-class",children:"Limiting visibility of a generated class"}),"\n",(0,d.jsx)(n.p,{children:"By default, generated code for your serializable objects is available both on the server and the client. You may want to have the code on the server side only. E.g., if the serializable object is connected to a database table containing private information."}),"\n",(0,d.jsx)(n.p,{children:"To make a serializable class generated only on the server side, set the serverOnly property to true."}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-yaml",children:"class: MyPrivateClass\nserverOnly: true\nfields:\n  hiddenSecretKey: String\n"})}),"\n",(0,d.jsxs)(n.p,{children:["It is also possible to set a ",(0,d.jsx)(n.code,{children:"scope"})," on a per-field basis. By default all fields are visible to both the server and the client. The available scopes are ",(0,d.jsx)(n.code,{children:"all"}),", ",(0,d.jsx)(n.code,{children:"serverOnly"}),", ",(0,d.jsx)(n.code,{children:"none"}),"."]}),"\n",(0,d.jsx)(n.admonition,{type:"info",children:(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.strong,{children:"none"})," is not typically used in serverpod apps. It is intended for the serverpod framework, itself."]})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-yaml",children:"class: SelectivelyHiddenClass\nfields:\n  hiddenSecretKey: String, scope=serverOnly\n  publicKey: String\n"})}),"\n",(0,d.jsx)(n.admonition,{type:"info",children:(0,d.jsxs)(n.p,{children:["Serverpod's models can easily be saved to or read from the database. You can read more about this in the ",(0,d.jsx)(n.a,{href:"database/models",children:"Database"})," section."]})}),"\n",(0,d.jsx)(n.h2,{id:"exception",children:"Exception"}),"\n",(0,d.jsxs)(n.p,{children:["The Serverpod models supports creating exceptions that can be thrown in endpoints by using the ",(0,d.jsx)(n.code,{children:"exception"})," keyword. For more in-depth description on how to work with exceptions see ",(0,d.jsx)(n.a,{href:"exceptions",children:"Error handling and exceptions"}),"."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-yaml",children:"exception: MyException\nfields:\n  message: String\n  errorType: MyEnum\n"})}),"\n",(0,d.jsx)(n.h2,{id:"enum",children:"Enum"}),"\n",(0,d.jsxs)(n.p,{children:["It is easy to add custom enums with serialization support by using the ",(0,d.jsx)(n.code,{children:"enum"})," keyword."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-yaml",children:"enum: Animal\nvalues:\n - dog\n - cat\n - bird\n"})}),"\n",(0,d.jsx)(n.p,{children:"By default the serialization will convert the enum to an int representing the index of the value. Changing the order may therefore have unforeseen consequences when reusing old data (such as from a database). Changing the serialization to be based on the name instead of index is easy."}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-yaml",children:"enum: Animal\nserialized: byName\nvalues:\n - dog\n - cat\n - bird\n"})}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"serialized"})," has two valid values ",(0,d.jsx)(n.code,{children:"byName"})," and ",(0,d.jsx)(n.code,{children:"byIndex"}),". When using ",(0,d.jsx)(n.code,{children:"byName"})," the string literal of the enum is used, when using ",(0,d.jsx)(n.code,{children:"byIndex"})," the index value (0, 1, 2, etc) is used."]}),"\n",(0,d.jsx)(n.admonition,{type:"info",children:(0,d.jsxs)(n.p,{children:["It's recommended to always set ",(0,d.jsx)(n.code,{children:"serialized"})," to ",(0,d.jsx)(n.code,{children:"byName"})," in any new Enum models, as this is less fragile and will be changed to the default setting in version 3 of Serverpod."]})}),"\n",(0,d.jsx)(n.h3,{id:"default-value",children:"Default value"}),"\n",(0,d.jsx)(n.p,{children:"A default value is used when an unknown value is deserialized. This can happen, for example, if a new enum option is added and older clients receive it from the server, or if an enum option is removed but the database still contains the old value."}),"\n",(0,d.jsxs)(n.p,{children:["To configure a default value, use the ",(0,d.jsx)(n.code,{children:"default"})," keyword."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-yaml",children:"enum: Animal\nserialized: byName\ndefault: unknown\nvalues:\n - unknown\n - dog\n - cat\n - bird\n"})}),"\n",(0,d.jsxs)(n.p,{children:["In the example above, if the Enum ",(0,d.jsx)(n.code,{children:"Animal"})," receives an unknown option such as ",(0,d.jsx)(n.code,{children:'"fish"'})," it will be deserialized to ",(0,d.jsx)(n.code,{children:"Animal.unknown"}),". This is useful for maintaining backward compatibility when changing the enum values."]}),"\n",(0,d.jsx)(n.admonition,{type:"warning",children:(0,d.jsx)(n.p,{children:"If no default value is specified, deserialization of unknown values will throw an exception. Adding a default value prevents these exceptions, but may also hide real issues in your data. Use this feature with caution."})}),"\n",(0,d.jsx)(n.h2,{id:"adding-documentation",children:"Adding documentation"}),"\n",(0,d.jsx)(n.p,{children:"Serverpod allows you to add documentation to your serializable objects in a similar way that you would add documentation to your Dart code. Use three hashes (###) to indicate that a comment should be considered documentation."}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-yaml",children:"### Information about a company.\nclass: Company\nfields:\n  ### The name of the company.\n  name: String\n\n  ### The date the company was founded, if known.\n  foundedDate: DateTime?\n\n  ### A list of people currently employed at the company.\n  employees: List<Employee>\n"})}),"\n",(0,d.jsx)(n.h2,{id:"vector-fields",children:"Vector fields"}),"\n",(0,d.jsx)(n.p,{children:"Vector types are used for storing high-dimensional vectors, which are especially useful for similarity search operations."}),"\n",(0,d.jsxs)(n.p,{children:["When specifying vector types, the dimension is required between parentheses (e.g., ",(0,d.jsx)(n.code,{children:"Vector(1536)"}),"). Common dimensions include:"]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"1536 (OpenAI embeddings)"}),"\n",(0,d.jsx)(n.li,{children:"768 (many sentence transformers)"}),"\n",(0,d.jsx)(n.li,{children:"384 (smaller models)"}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["All vector types support specialized distance operations for similarity search and filtering. See the ",(0,d.jsx)(n.a,{href:"database/filter#vector-distance-operators",children:"Vector distance operators"})," section for details."]}),"\n",(0,d.jsxs)(n.p,{children:["To ensure optimal performance with vector similarity searches, consider creating specialized vector indexes on your vector fields. See the ",(0,d.jsx)(n.a,{href:"database/indexing#vector-indexes",children:"Vector indexes"})," section for more details."]}),"\n",(0,d.jsx)(n.admonition,{type:"info",children:(0,d.jsxs)(n.p,{children:["The usage of Vector fields requires the pgvector PostgreSQL extension to be installed, which comes by default on new Serverpod projects. To upgrade an existing project, see the ",(0,d.jsx)(n.a,{href:"../upgrading/upgrade-to-pgvector",children:"Upgrading to pgvector support"})," guide."]})}),"\n",(0,d.jsx)(n.h3,{id:"vector",children:"Vector"}),"\n",(0,d.jsxs)(n.p,{children:["The ",(0,d.jsx)(n.code,{children:"Vector"})," type stores full-precision floating-point vectors for general-purpose embeddings."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-yaml",children:"class: Document\ntable: document\nfields:\n  ### The category of the document (e.g., article, tutorial).\n  category: String\n\n  ### The contents of the document.\n  content: String\n\n  ### A vector field for storing document embeddings\n  embedding: Vector(1536)\n"})}),"\n",(0,d.jsx)(n.h3,{id:"halfvector",children:"HalfVector"}),"\n",(0,d.jsxs)(n.p,{children:["The ",(0,d.jsx)(n.code,{children:"HalfVector"})," type uses half-precision (16-bit) floating-point numbers, providing memory savings with acceptable precision loss for several applications."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-yaml",children:"class: Document\ntable: document\nfields:\n  content: String\n  ### Half-precision embedding for memory efficiency\n  embedding: HalfVector(1536)\n"})}),"\n",(0,d.jsx)(n.h3,{id:"sparsevector",children:"SparseVector"}),"\n",(0,d.jsxs)(n.p,{children:["The ",(0,d.jsx)(n.code,{children:"SparseVector"})," type efficiently stores sparse vectors where most values are zero, which is ideal for high-dimensional data with few non-zero elements."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-yaml",children:"class: Document\ntable: document\nfields:\n  content: String\n  ### Sparse vector for keyword-based embeddings\n  keywords: SparseVector(10000)\n"})}),"\n",(0,d.jsx)(n.h3,{id:"bit",children:"Bit"}),"\n",(0,d.jsxs)(n.p,{children:["The ",(0,d.jsx)(n.code,{children:"Bit"})," type stores binary vectors where each element is 0 or 1, offering maximum memory efficiency for binary embeddings."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-yaml",children:"class: Document\ntable: document\nfields:\n  content: String\n  ### Binary vector for semantic hashing\n  hash: Bit(256)\n"})}),"\n",(0,d.jsx)(n.h2,{id:"generated-code",children:"Generated code"}),"\n",(0,d.jsx)(n.p,{children:"Serverpod generates some convenience methods on the Dart classes."}),"\n",(0,d.jsx)(n.h3,{id:"copywith",children:"copyWith"}),"\n",(0,d.jsxs)(n.p,{children:["The ",(0,d.jsx)(n.code,{children:"copyWith"})," method allows for efficient object copying with selective field updates and is available on all generated classes. Here's how it operates:"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-dart",children:"var john = User(name: 'John Doe', age: 25);\nvar jane = john.copyWith(name: 'Jane Doe');\n"})}),"\n",(0,d.jsxs)(n.p,{children:["The ",(0,d.jsx)(n.code,{children:"copyWith"})," method generates a deep copy of an object, preserving all original fields unless explicitly modified. It can distinguish between a field set to ",(0,d.jsx)(n.code,{children:"null"})," and a field left unspecified (undefined). When using ",(0,d.jsx)(n.code,{children:"copyWith"}),", any field you don't update remains unchanged in the new object."]}),"\n",(0,d.jsx)(n.h3,{id:"tojson--fromjson",children:"toJson / fromJson"}),"\n",(0,d.jsxs)(n.p,{children:["The ",(0,d.jsx)(n.code,{children:"toJson"})," and ",(0,d.jsx)(n.code,{children:"fromJson"})," methods are generated on all models to help with serialization. Serverpod manages all serialization for you out of the box and you will rarely have to use these methods by your self. See the ",(0,d.jsx)(n.a,{href:"serialization",children:"Serialization"})," section for more info."]}),"\n",(0,d.jsx)(n.h3,{id:"custom-methods",children:"Custom methods"}),"\n",(0,d.jsxs)(n.p,{children:["Sometimes you will want to add custom methods to the generated classes. The easiest way to do this is with ",(0,d.jsx)(n.a,{href:"https://dart.dev/language/extension-methods",children:"Dart's extension feature"}),"."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-dart",children:"extension MyExtension on MyClass {\n  bool isCustomMethod() {\n    return true;\n  }\n}\n"})}),"\n",(0,d.jsx)(n.h2,{id:"default-values",children:"Default Values"}),"\n",(0,d.jsx)(n.p,{children:"Serverpod supports defining default values for fields in your models. These default values can be specified using three different keywords that determine how and where the defaults are applied:"}),"\n",(0,d.jsx)(n.h3,{id:"keywords",children:"Keywords"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"default"}),": This keyword sets a default value for both the model (code) and the database (persisted data). It acts as a general fallback if more specific defaults aren't provided."]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"defaultModel"}),": This keyword sets a default value specifically for the model (the code side). If ",(0,d.jsx)(n.code,{children:"defaultModel"})," is not provided, the model will use the value specified by ",(0,d.jsx)(n.code,{children:"default"})," if it's available."]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"defaultPersist"}),": This keyword sets a default value specifically for the database. If ",(0,d.jsx)(n.code,{children:"defaultPersist"})," is not provided, the database will use the value specified by ",(0,d.jsx)(n.code,{children:"default"})," if it's available."]}),"\n"]}),"\n",(0,d.jsx)(n.h3,{id:"how-priorities-work",children:"How priorities work"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"For the model (code side):"})," If both ",(0,d.jsx)(n.code,{children:"defaultModel"})," and ",(0,d.jsx)(n.code,{children:"default"})," are provided, the model will use the ",(0,d.jsx)(n.code,{children:"defaultModel"})," value. If ",(0,d.jsx)(n.code,{children:"defaultModel"})," is not provided, it will fall back to using the ",(0,d.jsx)(n.code,{children:"default"})," value."]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"For the database (persisted data):"})," If both ",(0,d.jsx)(n.code,{children:"defaultPersist"})," and ",(0,d.jsx)(n.code,{children:"default"})," are provided, the database will use the ",(0,d.jsx)(n.code,{children:"defaultPersist"})," value. If ",(0,d.jsx)(n.code,{children:"defaultPersist"})," is not provided, it will fall back to using the ",(0,d.jsx)(n.code,{children:"default"})," value."]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:"You can use these default values individually or in combination as needed. It is not required to use all default types for a field."}),"\n",(0,d.jsxs)(n.admonition,{type:"info",children:[(0,d.jsxs)(n.p,{children:["When using ",(0,d.jsx)(n.code,{children:"default"})," or ",(0,d.jsx)(n.code,{children:"defaultModel"})," in combination with ",(0,d.jsx)(n.code,{children:"defaultPersist"}),", it's important to understand how the interaction between these keywords affects the final value in the database."]}),(0,d.jsxs)(n.p,{children:["If you set a ",(0,d.jsx)(n.code,{children:"default"})," or ",(0,d.jsx)(n.code,{children:"defaultModel"})," value, the model's field or variable will have a value when it's passed to the database\u2014it will not be ",(0,d.jsx)(n.code,{children:"null"}),". Because of this, the SQL query will not use the ",(0,d.jsx)(n.code,{children:"defaultPersist"})," value since the field already has a value assigned by the model. In essence, assigning a ",(0,d.jsx)(n.code,{children:"default"})," or ",(0,d.jsx)(n.code,{children:"defaultModel"})," is like directly providing a value to the field, and the database will use this provided value instead of its own default."]}),(0,d.jsxs)(n.p,{children:["This means that ",(0,d.jsx)(n.code,{children:"defaultPersist"})," only comes into play when the model does not provide a value, allowing the database to apply its own default setting."]})]}),"\n",(0,d.jsx)(n.h3,{id:"supported-default-values",children:"Supported default values"}),"\n",(0,d.jsx)(n.h4,{id:"boolean",children:"Boolean"}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Keyword"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:"Boolean"})}),(0,d.jsxs)(n.td,{children:[(0,d.jsx)(n.code,{children:"true"})," or ",(0,d.jsx)(n.code,{children:"false"})]}),(0,d.jsxs)(n.td,{children:["Sets the field to a boolean value, either ",(0,d.jsx)(n.code,{children:"true"})," or ",(0,d.jsx)(n.code,{children:"false"}),"."]})]})})]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Example:"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-yaml",children:"boolDefault: bool, default=true\n"})}),"\n",(0,d.jsx)(n.h4,{id:"datetime",children:"DateTime"}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Keyword"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:"Current Date and Time"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"now"})}),(0,d.jsx)(n.td,{children:"Sets the field to the current date and time."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:"Specific UTC DateTime"})}),(0,d.jsxs)(n.td,{children:["UTC DateTime string in the format ",(0,d.jsx)(n.code,{children:"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"})]}),(0,d.jsx)(n.td,{children:"Sets the field to a specific date and time."})]})]})]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Example:"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-yaml",children:"dateTimeDefaultNow: DateTime, default=now\ndateTimeDefaultUtc: DateTime, default=2024-05-01T22:00:00.000Z\n"})}),"\n",(0,d.jsx)(n.h4,{id:"double",children:"Double"}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Keyword"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:"Double"})}),(0,d.jsx)(n.td,{children:"Any double value"}),(0,d.jsx)(n.td,{children:"Sets the field to a specific double value."})]})})]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Example:"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-yaml",children:"doubleDefault: double, default=10.5\n"})}),"\n",(0,d.jsx)(n.h4,{id:"duration",children:"Duration"}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Keyword"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:"Specific Duration"})}),(0,d.jsxs)(n.td,{children:["A valid duration in the format ",(0,d.jsx)(n.code,{children:"Xd Xh Xmin Xs Xms"})]}),(0,d.jsxs)(n.td,{children:["Sets the field to a specific duration value. For example, ",(0,d.jsx)(n.code,{children:"1d 2h 10min 30s 100ms"})," represents 1 day, 2 hours, 10 minutes, 30 seconds, and 100 milliseconds."]})]})})]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Example:"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-yaml",children:"durationDefault: Duration, default=1d 2h 10min 30s 100ms\n"})}),"\n",(0,d.jsx)(n.h4,{id:"enum-1",children:"Enum"}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Keyword"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:"Enum"})}),(0,d.jsx)(n.td,{children:"Any valid enum value"}),(0,d.jsx)(n.td,{children:"Sets the field to a specific enum value."})]})})]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Example:"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-yaml",children:"enum: ByNameEnum\nserialized: byName\nvalues:\n  - byName1\n  - byName2\n"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-yaml",children:"enum: ByIndexEnum\nserialized: byIndex\nvalues:\n  - byIndex1\n  - byIndex2\n"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-yaml",children:"class: EnumDefault\ntable: enum_default\nfields:\n  byNameEnumDefault: ByNameEnum, default=byName1\n  byIndexEnumDefault: ByIndexEnum, default=byIndex1\n"})}),"\n",(0,d.jsx)(n.p,{children:"In this example:"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["The ",(0,d.jsx)(n.code,{children:"byNameEnumDefault"})," field will default to ",(0,d.jsx)(n.code,{children:"'byName1'"})," in the database."]}),"\n",(0,d.jsxs)(n.li,{children:["The ",(0,d.jsx)(n.code,{children:"byIndexEnumDefault"})," field will default to ",(0,d.jsx)(n.code,{children:"0"})," (the index of ",(0,d.jsx)(n.code,{children:"byIndex1"}),")."]}),"\n"]}),"\n",(0,d.jsx)(n.h4,{id:"integer",children:"Integer"}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Keyword"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:"Integer"})}),(0,d.jsx)(n.td,{children:"Any integer value"}),(0,d.jsx)(n.td,{children:"Sets the field to a specific integer value."})]})})]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Example:"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-yaml",children:"intDefault: int, default=10\n"})}),"\n",(0,d.jsx)(n.h4,{id:"string",children:"String"}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Keyword"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:"String"})}),(0,d.jsx)(n.td,{children:"Any string value"}),(0,d.jsx)(n.td,{children:"Sets the field to a specific string value."})]})})]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Example:"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-yaml",children:"stringDefault: String, default='This is a string'\n"})}),"\n",(0,d.jsx)(n.h4,{id:"uuidvalue",children:"UuidValue"}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Keyword"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:"Random UUID"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"random"})}),(0,d.jsxs)(n.td,{children:["Generates a random UUID. On the Dart side, ",(0,d.jsx)(n.code,{children:"Uuid().v4obj()"})," is used. On the database side, ",(0,d.jsx)(n.code,{children:"gen_random_uuid()"})," is used."]})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:"Random UUIDv7"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"random_v7"})}),(0,d.jsxs)(n.td,{children:["Generates a random UUIDv7. On the Dart side, ",(0,d.jsx)(n.code,{children:"Uuid().v7obj()"})," is used. On the database side, a generated ",(0,d.jsx)(n.code,{children:"gen_random_uuid_v7()"})," function is used."]})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.strong,{children:"UUID String"})}),(0,d.jsx)(n.td,{children:"Valid UUID in the format 'xxxxxxxx-xxxx-Mxxx-Nxxx-xxxxxxxxxxxx' where M is the UUID version field. The upper two or three bits of digit N encode the variant. E.g. '550e8400-e29b-41d4-a716-446655440000'"}),(0,d.jsx)(n.td,{children:"Assigns a specific UUID to the field."})]})]})]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.strong,{children:"Example:"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-yaml",children:"uuidDefaultRandom: UuidValue, default=random\nuuidDefaultUuid: UuidValue, default='550e8400-e29b-41d4-a716-446655440000'\nuuidDefaultRandomUuidV7: UuidValue, default=random_v7\n"})}),"\n",(0,d.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-yaml",children:'class: DefaultValue\ntable: default_value\nfields:\n  ### Sets the current date and time as the default value.\n  dateTimeDefault: DateTime, default=now\n\n  ### Sets the default value for a boolean field.\n  boolDefault: bool, defaultModel=false, defaultPersist=true\n\n  ### Sets the default value for an integer field.\n  intDefault: int, defaultPersist=20\n\n  ### Sets the default value for a double field.\n  doubleDefault: double, default=10.5, defaultPersist=20.5\n\n  ### Sets the default value for a string field.\n  stringDefault: String, default="This is a string", defaultModel="This is a string"\n'})}),"\n",(0,d.jsx)(n.h2,{id:"keywords-1",children:"Keywords"}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:(0,d.jsx)(n.strong,{children:"Keyword"})}),(0,d.jsx)(n.th,{children:"Note"}),(0,d.jsx)(n.th,{style:{textAlign:"center"},children:(0,d.jsx)(n.a,{href:"#class",children:"class"})}),(0,d.jsx)(n.th,{style:{textAlign:"center"},children:(0,d.jsx)(n.a,{href:"#exception",children:"exception"})}),(0,d.jsx)(n.th,{style:{textAlign:"center"},children:(0,d.jsx)(n.a,{href:"#enum",children:"enum"})})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"#enum",children:(0,d.jsx)(n.strong,{children:"values"})})}),(0,d.jsx)(n.td,{children:"A special key for enums with a list of all enum values."}),(0,d.jsx)(n.td,{style:{textAlign:"center"}}),(0,d.jsx)(n.td,{style:{textAlign:"center"}}),(0,d.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"#enum",children:(0,d.jsx)(n.strong,{children:"serialized"})})}),(0,d.jsx)(n.td,{children:"Sets the mode enums are serialized in"}),(0,d.jsx)(n.td,{style:{textAlign:"center"}}),(0,d.jsx)(n.td,{style:{textAlign:"center"}}),(0,d.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"#limiting-visibility-of-a-generated-class",children:(0,d.jsx)(n.strong,{children:"serverOnly"})})}),(0,d.jsx)(n.td,{children:"Boolean flag if code generator only should create the code for the server."}),(0,d.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,d.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,d.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"database/models",children:(0,d.jsx)(n.strong,{children:"table"})})}),(0,d.jsx)(n.td,{children:"A name for the database table, enables generation of database code."}),(0,d.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,d.jsx)(n.td,{style:{textAlign:"center"}}),(0,d.jsx)(n.td,{style:{textAlign:"center"}})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"database/migrations#opt-out-of-migrations",children:(0,d.jsx)(n.strong,{children:"managedMigration"})})}),(0,d.jsx)(n.td,{children:"A boolean flag to opt out of the database migration system."}),(0,d.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,d.jsx)(n.td,{style:{textAlign:"center"}}),(0,d.jsx)(n.td,{style:{textAlign:"center"}})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"#class",children:(0,d.jsx)(n.strong,{children:"fields"})})}),(0,d.jsx)(n.td,{children:"All fields in the generated class should be listed here."}),(0,d.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,d.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,d.jsx)(n.td,{style:{textAlign:"center"}})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"#class",children:(0,d.jsx)(n.strong,{children:"type (fields)"})})}),(0,d.jsx)(n.td,{children:"Denotes the data type for a field."}),(0,d.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,d.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,d.jsx)(n.td,{style:{textAlign:"center"}})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"#required-fields",children:(0,d.jsx)(n.strong,{children:"required"})})}),(0,d.jsxs)(n.td,{children:["Makes the field as required. This keyword can only be used for ",(0,d.jsx)(n.strong,{children:"nullable"})," fields."]}),(0,d.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,d.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,d.jsx)(n.td,{style:{textAlign:"center"}})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"#limiting-visibility-of-a-generated-class",children:(0,d.jsx)(n.strong,{children:"scope"})})}),(0,d.jsx)(n.td,{children:"Denotes the scope for a field."}),(0,d.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,d.jsx)(n.td,{style:{textAlign:"center"}}),(0,d.jsx)(n.td,{style:{textAlign:"center"}})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"database/models",children:(0,d.jsx)(n.strong,{children:"persist"})})}),(0,d.jsxs)(n.td,{children:["A boolean flag if the data should be stored in the database or not can be negated with ",(0,d.jsx)(n.code,{children:"!persist"})]}),(0,d.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,d.jsx)(n.td,{style:{textAlign:"center"}}),(0,d.jsx)(n.td,{style:{textAlign:"center"}})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"database/relations/one-to-one",children:(0,d.jsx)(n.strong,{children:"relation"})})}),(0,d.jsx)(n.td,{children:"Sets a relation between model files, requires a table name to be set."}),(0,d.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,d.jsx)(n.td,{style:{textAlign:"center"}}),(0,d.jsx)(n.td,{style:{textAlign:"center"}})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"database/relations/one-to-one#bidirectional-relations",children:(0,d.jsx)(n.strong,{children:"name"})})}),(0,d.jsx)(n.td,{children:"Give a name to a relation to pair them."}),(0,d.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,d.jsx)(n.td,{style:{textAlign:"center"}}),(0,d.jsx)(n.td,{style:{textAlign:"center"}})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"database/relations/one-to-one#with-an-id-field",children:(0,d.jsx)(n.strong,{children:"parent"})})}),(0,d.jsx)(n.td,{children:"Sets the parent table on a relation."}),(0,d.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,d.jsx)(n.td,{style:{textAlign:"center"}}),(0,d.jsx)(n.td,{style:{textAlign:"center"}})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"database/relations/one-to-one#custom-foreign-key-field",children:(0,d.jsx)(n.strong,{children:"field"})})}),(0,d.jsx)(n.td,{children:"A manual specified foreign key field."}),(0,d.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,d.jsx)(n.td,{style:{textAlign:"center"}}),(0,d.jsx)(n.td,{style:{textAlign:"center"}})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"database/relations/referential-actions",children:(0,d.jsx)(n.strong,{children:"onUpdate"})})}),(0,d.jsx)(n.td,{children:"Set the referential actions when updating data in the database."}),(0,d.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,d.jsx)(n.td,{style:{textAlign:"center"}}),(0,d.jsx)(n.td,{style:{textAlign:"center"}})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"database/relations/referential-actions",children:(0,d.jsx)(n.strong,{children:"onDelete"})})}),(0,d.jsx)(n.td,{children:"Set the referential actions when deleting data in the database."}),(0,d.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,d.jsx)(n.td,{style:{textAlign:"center"}}),(0,d.jsx)(n.td,{style:{textAlign:"center"}})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"database/relations/one-to-one#optional-relation",children:(0,d.jsx)(n.strong,{children:"optional"})})}),(0,d.jsx)(n.td,{children:"A boolean flag to make a relation optional."}),(0,d.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,d.jsx)(n.td,{style:{textAlign:"center"}}),(0,d.jsx)(n.td,{style:{textAlign:"center"}})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"database/indexing",children:(0,d.jsx)(n.strong,{children:"indexes"})})}),(0,d.jsx)(n.td,{children:"Create indexes on your fields / columns."}),(0,d.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,d.jsx)(n.td,{style:{textAlign:"center"}}),(0,d.jsx)(n.td,{style:{textAlign:"center"}})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"database/indexing",children:(0,d.jsx)(n.strong,{children:"fields (index)"})})}),(0,d.jsx)(n.td,{children:"List the fields to create the indexes on."}),(0,d.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,d.jsx)(n.td,{style:{textAlign:"center"}}),(0,d.jsx)(n.td,{style:{textAlign:"center"}})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"database/indexing",children:(0,d.jsx)(n.strong,{children:"type (index)"})})}),(0,d.jsx)(n.td,{children:"The type of index to create."}),(0,d.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,d.jsx)(n.td,{style:{textAlign:"center"}}),(0,d.jsx)(n.td,{style:{textAlign:"center"}})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"database/indexing#vector-indexes",children:(0,d.jsx)(n.strong,{children:"parameters (index)"})})}),(0,d.jsx)(n.td,{children:"Parameters for specialized index types like HNSW and IVFFLAT vector indexes."}),(0,d.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,d.jsx)(n.td,{style:{textAlign:"center"}}),(0,d.jsx)(n.td,{style:{textAlign:"center"}})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"database/indexing#vector-indexes",children:(0,d.jsx)(n.strong,{children:"distanceFunction (index)"})})}),(0,d.jsx)(n.td,{children:"Distance function for vector indexes (l2, innerProduct, cosine, l1)."}),(0,d.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,d.jsx)(n.td,{style:{textAlign:"center"}}),(0,d.jsx)(n.td,{style:{textAlign:"center"}})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"database/indexing",children:(0,d.jsx)(n.strong,{children:"unique"})})}),(0,d.jsx)(n.td,{children:"Boolean flag to make the entries unique in the database."}),(0,d.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,d.jsx)(n.td,{style:{textAlign:"center"}}),(0,d.jsx)(n.td,{style:{textAlign:"center"}})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"#default-values",children:(0,d.jsx)(n.strong,{children:"default"})})}),(0,d.jsxs)(n.td,{children:["Sets the default value for both the model and the database. This keyword cannot be used with ",(0,d.jsx)(n.strong,{children:"relation"}),"."]}),(0,d.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,d.jsx)(n.td,{style:{textAlign:"center"}}),(0,d.jsx)(n.td,{style:{textAlign:"center"}})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"#default-values",children:(0,d.jsx)(n.strong,{children:"defaultModel"})})}),(0,d.jsxs)(n.td,{children:["Sets the default value for the model side. This keyword cannot be used with ",(0,d.jsx)(n.strong,{children:"relation"}),"."]}),(0,d.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,d.jsx)(n.td,{style:{textAlign:"center"}}),(0,d.jsx)(n.td,{style:{textAlign:"center"}})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.a,{href:"#default-values",children:(0,d.jsx)(n.strong,{children:"defaultPersist"})})}),(0,d.jsxs)(n.td,{children:["Sets the default value for the database side.  This keyword cannot be used with ",(0,d.jsx)(n.strong,{children:"relation"})," and ",(0,d.jsx)(n.strong,{children:"!persist"}),"."]}),(0,d.jsx)(n.td,{style:{textAlign:"center"},children:"\u2705"}),(0,d.jsx)(n.td,{style:{textAlign:"center"}}),(0,d.jsx)(n.td,{style:{textAlign:"center"}})]})]})]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(o,{...e})}):o(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>r});var s=t(96540);const d={},i=s.createContext(d);function l(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:l(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);