"use strict";(self.webpackChunkserverpod_docs=self.webpackChunkserverpod_docs||[]).push([[98201],{77038:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>d,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"serverpod-mini","title":"Serverpod Mini","description":"Serverpod or Serverpod Mini?","source":"@site/docs/serverpod-mini.md","sourceDirName":".","slug":"/serverpod-mini","permalink":"/next/serverpod-mini","draft":false,"unlisted":false,"editUrl":"https://github.com/serverpod/serverpod_docs/tree/main/docs/serverpod-mini.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Roadmap & contributions","permalink":"/next/contribute"}}');var s=r(74848),i=r(28453);const d={},o="Serverpod Mini",l={},c=[{value:"Serverpod or Serverpod Mini?",id:"serverpod-or-serverpod-mini",level:2},{value:"Create a new project",id:"create-a-new-project",level:2},{value:"Creating models",id:"creating-models",level:2},{value:"Adding methods to your server",id:"adding-methods-to-your-server",level:2},{value:"Calling the server methods from the app",id:"calling-the-server-methods-from-the-app",level:2},{value:"Conclusion",id:"conclusion",level:2}];function a(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components},{Details:r}=t;return r||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"serverpod-mini",children:"Serverpod Mini"})}),"\n",(0,s.jsx)(t.h2,{id:"serverpod-or-serverpod-mini",children:"Serverpod or Serverpod Mini?"}),"\n",(0,s.jsx)(t.p,{children:"Serverpod Mini is a lightweight version of Serverpod that is perfect for small projects or when you want to try out Serverpod without setting up a Postgres database. If you start with Mini, you can upgrade to the full version of Serverpod anytime."}),"\n",(0,s.jsxs)(r,{open:!0,children:[(0,s.jsx)("summary",{children:(0,s.jsx)(t.strong,{children:"Serverpod vs Serverpod Mini comparison"})}),(0,s.jsx)("p",{children:(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Feature"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Serverpod"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"Serverpod Mini"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Remote method calls"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Generated data models"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Streaming data"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Custom auth"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Pre-built auth"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"}})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Postgres database ORM"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"}})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Task scheduling"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"}})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Basic logging"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Serverpod Insights"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"}})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Caching"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"File uploads"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"}})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Health checks"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"}})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Relic web server"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"}})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Easy deployment"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"\u2705"})]})]})]})})]}),"\n",(0,s.jsx)("div",{style:{position:"relative",paddingBottom:"56.25%",height:"0"},children:(0,s.jsx)("iframe",{style:{position:"absolute",top:"0",left:"0",width:"100%",height:"100%"},width:"560",height:"315",src:"https://www.youtube-nocookie.com/embed/dSBK4JOZRyI",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:!0})}),"\n",(0,s.jsx)(t.h2,{id:"create-a-new-project",children:"Create a new project"}),"\n",(0,s.jsx)(t.p,{children:"Create a mini project by running:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"$ serverpod create myminipod --mini\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Serverpod will create a new project for you. It contains three Dart packages, but you only need to pay attention to the ",(0,s.jsx)(t.code,{children:"myminipod_server"})," and ",(0,s.jsx)(t.code,{children:"myminipod_flutter"})," directories. The server directory contains your server files, and the flutter directory contains your app. The third package (",(0,s.jsx)(t.code,{children:"myminipod_client"}),") contains generated code that is used by the Flutter app to communicate with the server."]}),"\n",(0,s.jsxs)(t.p,{children:["Start your server by changing directory into your server directory, and run the ",(0,s.jsx)(t.code,{children:"bin/main.dart"})," file:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"$ cd myminipod/myminipod_server\n$ dart bin/main.dart\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Your default project comes with a sample Flutter app, all hooked up to talk with your server. Run it with the ",(0,s.jsx)(t.code,{children:"flutter"})," command:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"$ cd myminipod/myminipod_flutter\n$ flutter run -d chrome\n"})}),"\n",(0,s.jsx)(t.p,{children:"Easy as that. \ud83e\udd73"}),"\n",(0,s.jsx)(t.admonition,{type:"tip",children:(0,s.jsx)(t.p,{children:"If you are using VS Code, install our Serverpod extension. It will help you validate any Serverpod-related files in your project!"})}),"\n",(0,s.jsx)(t.h2,{id:"creating-models",children:"Creating models"}),"\n",(0,s.jsxs)(t.p,{children:["In Serverpod, you define your models in easy-to-read YAML-files, which you place anywhere in your server's ",(0,s.jsx)(t.code,{children:"lib"})," directory with the ",(0,s.jsx)(t.code,{children:".spy.yaml"})," extension. Model files will be converted to Dart classes that can be serialized and sent to and from the server to your app. This is an example of a model file:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:"class: Company\nfields:\n  name: String\n  foundedDate: DateTime?\n  employees: List<String>\n"})}),"\n",(0,s.jsxs)(t.p,{children:["For types, you can use most basic Dart types, such as ",(0,s.jsx)(t.code,{children:"String"}),", ",(0,s.jsx)(t.code,{children:"double"}),", ",(0,s.jsx)(t.code,{children:"int"}),", ",(0,s.jsx)(t.code,{children:"bool"}),", ",(0,s.jsx)(t.code,{children:"DateTime"}),", ",(0,s.jsx)(t.code,{children:"UuidValue"}),", ",(0,s.jsx)(t.code,{children:"Uri"}),", ",(0,s.jsx)(t.code,{children:"BigInt"})," and ",(0,s.jsx)(t.code,{children:"ByteData"}),". You can also include ",(0,s.jsx)(t.code,{children:"List"}),", ",(0,s.jsx)(t.code,{children:"Set"})," and ",(0,s.jsx)(t.code,{children:"Map"}),", just make sure to specify their types. Any supported type can also be used inside a ",(0,s.jsx)(t.code,{children:"Record"}),". Any other class specified among your models is also supported."]}),"\n",(0,s.jsxs)(t.p,{children:["Whenever you add or edit a model file, run ",(0,s.jsx)(t.code,{children:"serverpod generate"})," in your server directory. Then, Serverpod will generate all the updated Dart classes:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"$ cd myminipod/myminipod_server\n$ serverpod generate\n"})}),"\n",(0,s.jsx)(t.h2,{id:"adding-methods-to-your-server",children:"Adding methods to your server"}),"\n",(0,s.jsxs)(t.p,{children:["With Serverpod, you add Dart methods to endpoints placed in your server's ",(0,s.jsx)(t.code,{children:"lib/src/endpoints"})," directory. By doing so, Serverpod will analyze your server code and automatically generate the corresponding methods in your Flutter app. Calling a method on the server is just like calling a local method in your app."]}),"\n",(0,s.jsx)(t.p,{children:"For the server methods to work, there are a few things you need to keep in mind:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"You must place the methods in a class that extends the Endpoint class."}),"\n",(0,s.jsx)(t.li,{children:"The methods must return a typed Future. The types you use in your methods are the same as those supported by your models."}),"\n",(0,s.jsx)(t.li,{children:"The first parameter of your method must be a Session object. The session contains extra information about the call being made to the server, such as the HTTP request object."}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"This is an example of an endpoint that uses the Company class that we defined in the example model in the previous section."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-dart",children:"import 'package:serverpod/serverpod.dart';\n\nclass CompanyEndpoint extends Endpoint {\n  Future<bool> isLegit(Session session, Company company) async {\n    // Check if the company has the foundedDate set and that it\n    // has been around for more than one year.\n\n    if (company.foundedDate == null) {\n      return false;\n    }\n\n    var oneYearAgo = DateTime.now().subract(Duration(days: 365));\n    return company.foundedDate!.isBefore(oneYearAgo);\n  }\n}\n"})}),"\n",(0,s.jsxs)(t.p,{children:["After adding or modifying endpoints and endpoint methods, you must run ",(0,s.jsx)(t.code,{children:"serverpod generate"})," to keep your Flutter app up-to-date."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"$ cd myminipod/myminipod_server\n$ serverpod generate\n"})}),"\n",(0,s.jsx)(t.h2,{id:"calling-the-server-methods-from-the-app",children:"Calling the server methods from the app"}),"\n",(0,s.jsxs)(t.p,{children:["When you run ",(0,s.jsx)(t.code,{children:"serverpod generate"})," Serverpod will add your endpoints and server methods to the ",(0,s.jsx)(t.code,{children:"client"})," object in your Flutter app. From the client, you can access all endpoints and methods."]}),"\n",(0,s.jsxs)(t.p,{children:["To call the endpoint method we just created from Flutter, just create a ",(0,s.jsx)(t.code,{children:"Company"})," object, call the method, and await the result:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-dart",children:"var company = Company(\n  name: 'Serverpod',\n  foundedDate: DateTime(2021, 9, 27),\n  employees: [\n    'Alex',\n    'Isak',\n    'Viktor',\n  ],\n);\n\nvar result = await client.company.isLegit(company);\n"})}),"\n",(0,s.jsx)(t.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,s.jsxs)(t.p,{children:["You are now ready to start exploring the exciting world of Serverpod! And even if you start out with Serverpod mini, you can always ",(0,s.jsx)(t.a,{href:"../upgrading/upgrade-from-mini",children:"upgrade"})," to the full version later."]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>d,x:()=>o});var n=r(96540);const s={},i=n.createContext(s);function d(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);