"use strict";(self.webpackChunkserverpod_docs=self.webpackChunkserverpod_docs||[]).push([[1171],{22806:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":"unreleased","badge":true,"noIndex":false,"className":"docs-version-current","isLast":false,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"\ud83d\udce6 Installation","href":"/next/","docId":"index","unlisted":false},{"type":"category","label":"\ud83d\ude80 Getting started","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"1. Creating endpoint methods","href":"/next/get-started/creating-endpoints","docId":"get-started/creating-endpoints","unlisted":false},{"type":"link","label":"2. Models and data","href":"/next/get-started/models-and-data","docId":"get-started/models-and-data","unlisted":false},{"type":"link","label":"3. Working with the database","href":"/next/get-started/working-with-the-database","docId":"get-started/working-with-the-database","unlisted":false},{"type":"link","label":"4. Deploying Serverpod","href":"/next/get-started/deployment","docId":"get-started/deployment","unlisted":false}]},{"type":"link","label":"\ud83e\udded Overview","href":"/next/overview","docId":"overview","unlisted":false},{"type":"link","label":"\ud83d\udcac Support & community","href":"/next/support","docId":"support","unlisted":false},{"type":"category","label":"\ud83c\udf93 Learn Serverpod","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"\ud83c\udfeb Serverpod Academy","href":"/next/tutorials/academy","docId":"tutorials/academy","unlisted":false},{"type":"category","label":"\ud83c\udfa5 Tutorials","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Backend fundamentals","href":"/next/tutorials/tutorials/fundamentals","docId":"tutorials/tutorials/fundamentals","unlisted":false},{"type":"link","label":"Real-time communication","href":"/next/tutorials/tutorials/real-time-communication","docId":"tutorials/tutorials/real-time-communication","unlisted":false},{"type":"link","label":"Integrating AI & RAG","href":"/next/tutorials/tutorials/ai-and-rag","docId":"tutorials/tutorials/ai-and-rag","unlisted":false}]},{"type":"category","label":"\ud83d\udcd8 Guides","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Authentication","href":"/next/tutorials/guides/authentication","docId":"tutorials/guides/authentication","unlisted":false}]}]},{"type":"category","label":"\ud83d\udcda Reference","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Working with endpoints","href":"/next/concepts/working-with-endpoints","docId":"concepts/working-with-endpoints","unlisted":false},{"type":"link","label":"Working with models","href":"/next/concepts/models","docId":"concepts/models","unlisted":false},{"type":"link","label":"Custom serialization","href":"/next/concepts/serialization","docId":"concepts/serialization","unlisted":false},{"type":"link","label":"Error handling and exceptions","href":"/next/concepts/exceptions","docId":"concepts/exceptions","unlisted":false},{"type":"link","label":"Sessions","href":"/next/concepts/sessions","docId":"concepts/sessions","unlisted":false},{"type":"category","label":"Database","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Connection","href":"/next/concepts/database/connection","docId":"concepts/database/connection","unlisted":false},{"type":"link","label":"Models","href":"/next/concepts/database/models","docId":"concepts/database/models","unlisted":false},{"type":"category","label":"Relations","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"One-to-one","href":"/next/concepts/database/relations/one-to-one","docId":"concepts/database/relations/one-to-one","unlisted":false},{"type":"link","label":"One-to-many","href":"/next/concepts/database/relations/one-to-many","docId":"concepts/database/relations/one-to-many","unlisted":false},{"type":"link","label":"Many-to-many","href":"/next/concepts/database/relations/many-to-many","docId":"concepts/database/relations/many-to-many","unlisted":false},{"type":"link","label":"Self-relations","href":"/next/concepts/database/relations/self-relations","docId":"concepts/database/relations/self-relations","unlisted":false},{"type":"link","label":"Referential actions","href":"/next/concepts/database/relations/referential-actions","docId":"concepts/database/relations/referential-actions","unlisted":false},{"type":"link","label":"Relations with modules","href":"/next/concepts/database/relations/modules","docId":"concepts/database/relations/modules","unlisted":false}]},{"type":"link","label":"Indexing","href":"/next/concepts/database/indexing","docId":"concepts/database/indexing","unlisted":false},{"type":"link","label":"CRUD","href":"/next/concepts/database/crud","docId":"concepts/database/crud","unlisted":false},{"type":"link","label":"Filter","href":"/next/concepts/database/filter","docId":"concepts/database/filter","unlisted":false},{"type":"link","label":"Relation queries (Joins)","href":"/next/concepts/database/relation-queries","docId":"concepts/database/relation-queries","unlisted":false},{"type":"link","label":"Sort","href":"/next/concepts/database/sort","docId":"concepts/database/sort","unlisted":false},{"type":"link","label":"Transactions","href":"/next/concepts/database/transactions","docId":"concepts/database/transactions","unlisted":false},{"type":"link","label":"Pagination","href":"/next/concepts/database/pagination","docId":"concepts/database/pagination","unlisted":false},{"type":"link","label":"Raw access","href":"/next/concepts/database/raw-access","docId":"concepts/database/raw-access","unlisted":false},{"type":"link","label":"Migrations","href":"/next/concepts/database/migrations","docId":"concepts/database/migrations","unlisted":false},{"type":"link","label":"Runtime parameters","href":"/next/concepts/database/runtime-parameters","docId":"concepts/database/runtime-parameters","unlisted":false}]},{"type":"link","label":"Configurations","href":"/next/concepts/configuration","docId":"concepts/configuration","unlisted":false},{"type":"link","label":"Caching","href":"/next/concepts/caching","docId":"concepts/caching","unlisted":false},{"type":"link","label":"Logging","href":"/next/concepts/logging","docId":"concepts/logging","unlisted":false},{"type":"link","label":"Modules","href":"/next/concepts/modules","docId":"concepts/modules","unlisted":false},{"type":"category","label":"Authentication","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Setup","href":"/next/concepts/authentication/setup","docId":"concepts/authentication/setup","unlisted":false},{"type":"link","label":"The basics","href":"/next/concepts/authentication/basics","docId":"concepts/authentication/basics","unlisted":false},{"type":"link","label":"Working with users","href":"/next/concepts/authentication/working-with-users","docId":"concepts/authentication/working-with-users","unlisted":false},{"type":"category","label":"Providers","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Email","href":"/next/concepts/authentication/providers/email","docId":"concepts/authentication/providers/email","unlisted":false},{"type":"link","label":"Google","href":"/next/concepts/authentication/providers/google","docId":"concepts/authentication/providers/google","unlisted":false},{"type":"link","label":"Apple","href":"/next/concepts/authentication/providers/apple","docId":"concepts/authentication/providers/apple","unlisted":false},{"type":"link","label":"Firebase","href":"/next/concepts/authentication/providers/firebase","docId":"concepts/authentication/providers/firebase","unlisted":false},{"type":"link","label":"Custom providers","href":"/next/concepts/authentication/providers/custom-providers","docId":"concepts/authentication/providers/custom-providers","unlisted":false}]},{"type":"link","label":"Custom overrides","href":"/next/concepts/authentication/custom-overrides","docId":"concepts/authentication/custom-overrides","unlisted":false}]},{"type":"link","label":"Uploading files","href":"/next/concepts/file-uploads","docId":"concepts/file-uploads","unlisted":false},{"type":"link","label":"Health checks","href":"/next/concepts/health-checks","docId":"concepts/health-checks","unlisted":false},{"type":"link","label":"Scheduling","href":"/next/concepts/scheduling","docId":"concepts/scheduling","unlisted":false},{"type":"link","label":"Streams","href":"/next/concepts/streams","docId":"concepts/streams","unlisted":false},{"type":"link","label":"Server events","href":"/next/concepts/server-events","docId":"concepts/server-events","unlisted":false},{"type":"link","label":"Backward compatibility","href":"/next/concepts/backward-compatibility","docId":"concepts/backward-compatibility","unlisted":false},{"type":"link","label":"Web server","href":"/next/concepts/webserver","docId":"concepts/webserver","unlisted":false},{"type":"category","label":"Testing","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Get started","href":"/next/concepts/testing/get-started","docId":"concepts/testing/get-started","unlisted":false},{"type":"link","label":"The basics","href":"/next/concepts/testing/the-basics","docId":"concepts/testing/the-basics","unlisted":false},{"type":"link","label":"Advanced examples","href":"/next/concepts/testing/advanced-examples","docId":"concepts/testing/advanced-examples","unlisted":false},{"type":"link","label":"Best practises","href":"/next/concepts/testing/best-practises","docId":"concepts/testing/best-practises","unlisted":false}]},{"type":"link","label":"Security Configuration","href":"/next/concepts/security-configuration","docId":"concepts/security-configuration","unlisted":false},{"type":"link","label":"Experimental features","href":"/next/concepts/experimental","docId":"concepts/experimental","unlisted":false}]},{"type":"category","label":"\ud83d\udea2 Deploying Serverpod","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Choosing deployment strategy","href":"/next/deployments/deployment-strategy","docId":"deployments/deployment-strategy","unlisted":false},{"type":"link","label":"Google Cloud Engine with Terraform","href":"/next/deployments/deploying-to-gce-terraform","docId":"deployments/deploying-to-gce-terraform","unlisted":false},{"type":"link","label":"Google Cloud Run with CGP Console","href":"/next/deployments/deploying-to-gcr-console","docId":"deployments/deploying-to-gcr-console","unlisted":false},{"type":"link","label":"AWS EC2 with Terraform","href":"/next/deployments/deploying-to-aws","docId":"deployments/deploying-to-aws","unlisted":false},{"type":"link","label":"Hosting elsewhere","href":"/next/deployments/general","docId":"deployments/general","unlisted":false},{"type":"link","label":"Community-supported deployments","href":"/next/deployments/community-supported-deployments","docId":"deployments/community-supported-deployments","unlisted":false}]},{"type":"category","label":"\ud83d\udd04 Upgrading","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Upgrade from Mini to full","href":"/next/upgrading/upgrade-from-mini","docId":"upgrading/upgrade-from-mini","unlisted":false},{"type":"link","label":"Upgrade to 1.2","href":"/next/upgrading/upgrade-to-one-point-two","docId":"upgrading/upgrade-to-one-point-two","unlisted":false},{"type":"link","label":"Upgrade to 2.0","href":"/next/upgrading/upgrade-to-two","docId":"upgrading/upgrade-to-two","unlisted":false},{"type":"link","label":"Upgrade to 2.2","href":"/next/upgrading/upgrade-to-two-point-two","docId":"upgrading/upgrade-to-two-point-two","unlisted":false},{"type":"link","label":"Upgrading to pgvector support","href":"/next/upgrading/upgrade-to-pgvector","docId":"upgrading/upgrade-to-pgvector","unlisted":false},{"type":"link","label":"Upgrade to 3.0","href":"/next/upgrading/upgrade-to-three","docId":"upgrading/upgrade-to-three","unlisted":false}]},{"type":"category","label":"\ud83e\uddf0 Tools","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Serverpod Insights","href":"/next/tools/insights","docId":"tools/insights","unlisted":false},{"type":"link","label":"LSP server","href":"/next/tools/lsp","docId":"tools/lsp","unlisted":false}]},{"type":"link","label":"\ud83d\udee3\ufe0f Roadmap & contributions","href":"/next/contribute","docId":"contribute","unlisted":false},{"type":"link","label":"\ud83d\udc23 Serverpod Mini","href":"/next/serverpod-mini","docId":"serverpod-mini","unlisted":false},{"type":"link","label":"\ud83d\udcdd Changelog","href":"https://pub.dev/packages/serverpod/changelog"}]},"docs":{"concepts/authentication/basics":{"id":"concepts/authentication/basics","title":"The basics","description":"Serverpod automatically checks if the user is logged in and if the user has the right privileges to access the endpoint. When using the serverpod_auth module you will not have to worry about keeping track of tokens, refreshing them or, even including them in requests as this all happens automatically under the hood.","sidebar":"tutorialSidebar"},"concepts/authentication/custom-overrides":{"id":"concepts/authentication/custom-overrides","title":"Custom overrides","description":"It is recommended to use the serverpod_auth package but if you have special requirements not fulfilled by it, you can implement your authentication module. Serverpod is designed to make it easy to add custom authentication overrides.","sidebar":"tutorialSidebar"},"concepts/authentication/providers/apple":{"id":"concepts/authentication/providers/apple","title":"Apple","description":"Sign-in with Apple, requires that you have a subscription to the Apple developer program, even if you only want to test the feature in development mode.","sidebar":"tutorialSidebar"},"concepts/authentication/providers/custom-providers":{"id":"concepts/authentication/providers/custom-providers","title":"Custom providers","description":"Serverpod\'s authentication module makes it easy to implement custom authentication providers. This allows you to leverage all the existing providers supplied by the module along with the specific providers your project requires.","sidebar":"tutorialSidebar"},"concepts/authentication/providers/email":{"id":"concepts/authentication/providers/email","title":"Email","description":"To properly configure Sign in with Email, you must connect your Serverpod to an external service that can send the emails. One convenient option is the mailer package, which can send emails through any SMTP service. Most email providers, such as Sendgrid or Mandrill, support SMTP.","sidebar":"tutorialSidebar"},"concepts/authentication/providers/firebase":{"id":"concepts/authentication/providers/firebase","title":"Firebase","description":"Serverpod uses Firebase UI auth to handle authentication through Firebase. It allows you to add social sign-in types that Serverpod doesn\'t directly support.","sidebar":"tutorialSidebar"},"concepts/authentication/providers/google":{"id":"concepts/authentication/providers/google","title":"Google","description":"To set up Sign in with Google, you will need a Google account for your organization and set up a new project. For the project, you need to set up Credentials and Oauth consent screen. You will also need to add the serverpodauthgoogle_flutter package to your app and do some additional setup depending on each platform.","sidebar":"tutorialSidebar"},"concepts/authentication/setup":{"id":"concepts/authentication/setup","title":"Setup","description":"Serverpod comes with built-in user management and authentication. It is possible to build a custom authentication implementation, but the recommended way to authenticate users is to use the serverpod_auth module. The module makes it easy to authenticate with email or social sign-ins and currently supports signing in with email, Google, Apple, and Firebase.","sidebar":"tutorialSidebar"},"concepts/authentication/working-with-users":{"id":"concepts/authentication/working-with-users","title":"Working with users","description":"It\'s a common task to read or update user information on your server. You can always retrieve the id of a signed-in user through the session object.","sidebar":"tutorialSidebar"},"concepts/backward-compatibility":{"id":"concepts/backward-compatibility","title":"Backward compatibility","description":"As your app evolves, features will be added or changed. However, your users may still use older versions of the app as not everyone will update to the latest version and automatic updates through the app stores take time. Therefore it may be essential to make updates to your server compatible with older app versions.","sidebar":"tutorialSidebar"},"concepts/caching":{"id":"concepts/caching","title":"Caching","description":"Accessing the database can be expensive for complex queries or if you need to run many different queries for a specific task. Serverpod makes it easy to cache frequently requested objects in the memory of your server. Any serializable object can be cached. Objects can be stored in the Redis cache if your Serverpod is hosted across multiple servers in a cluster.","sidebar":"tutorialSidebar"},"concepts/configuration":{"id":"concepts/configuration","title":"Configurations","description":"Serverpod can be configured in a few different ways. The minimum required settings to provide is the configuration for the API server. If no settings are provided at all, the default settings for the API server are used.","sidebar":"tutorialSidebar"},"concepts/database/connection":{"id":"concepts/database/connection","title":"Connection","description":"In Serverpod the connection details and password for the database are stored inside the config directory in your server package. Serverpod automatically establishes a connection to the Postgres instance by using these configuration details when you start the server.","sidebar":"tutorialSidebar"},"concepts/database/crud":{"id":"concepts/database/crud","title":"CRUD","description":"To interact with the database you need a Session object as this object holds the connection to the database. All CRUD operations are accessible via the session object and the generated models. The methods can be found under the static db field in your generated models.","sidebar":"tutorialSidebar"},"concepts/database/filter":{"id":"concepts/database/filter","title":"Filter","description":"Serverpod makes it easy to build expressions that are statically type-checked. Columns and relational fields are referenced using table descriptor objects. The table descriptors, t, are accessible from each model and are passed as an argument to a model specific expression builder function. A callback is then used as argument to the where parameter when fetching data from the database.","sidebar":"tutorialSidebar"},"concepts/database/indexing":{"id":"concepts/database/indexing","title":"Indexing","description":"For performance reasons, you may want to add indexes to your database tables. These are added in the YAML-files defining the serializable objects.","sidebar":"tutorialSidebar"},"concepts/database/migrations":{"id":"concepts/database/migrations","title":"Migrations","description":"Serverpod comes bundled with a simple-to-use but powerful migration system that helps you keep your database schema up to date as your project evolves. Database migrations provide a structured way of upgrading your database while maintaining existing data.","sidebar":"tutorialSidebar"},"concepts/database/models":{"id":"concepts/database/models","title":"Models","description":"It\'s possible to map serializable models to tables in your database. To do this, add the table key to your yaml file:","sidebar":"tutorialSidebar"},"concepts/database/pagination":{"id":"concepts/database/pagination","title":"Pagination","description":"Serverpod provides built-in support for pagination to help manage large datasets, allowing you to retrieve data in smaller chunks. Pagination is achieved using the limit and offset parameters.","sidebar":"tutorialSidebar"},"concepts/database/raw-access":{"id":"concepts/database/raw-access","title":"Raw access","description":"The library provides methods to execute raw SQL queries directly on the database for advanced scenarios.","sidebar":"tutorialSidebar"},"concepts/database/relation-queries":{"id":"concepts/database/relation-queries","title":"Relation queries (Joins)","description":"The Serverpod query framework supports filtering on, sorting on, and including relational data structures. In SQL this is often achieved using a join operation. The functionality is available if there exists any one-to-one or one-to-many object relations between two models.","sidebar":"tutorialSidebar"},"concepts/database/relations/many-to-many":{"id":"concepts/database/relations/many-to-many","title":"Many-to-many","description":"Many-to-many (n:m) relationships describes a scenario where multiple records from a table can relate to multiple records in another table. An example of this would be the relationship between students and courses, where a single student can enroll in multiple courses, and a single course can have multiple students.","sidebar":"tutorialSidebar"},"concepts/database/relations/modules":{"id":"concepts/database/relations/modules","title":"Relations with modules","description":"Serverpod modules usually come with predefined tables and data structures. Sometimes it can be useful to extend them with your data structures by creating a relation to the module tables. Relations to modules come with some restrictions since you do not own the definition of the table, you cannot change the table structure of a module table.","sidebar":"tutorialSidebar"},"concepts/database/relations/one-to-many":{"id":"concepts/database/relations/one-to-many","title":"One-to-many","description":"One-to-many (1:n) relationships describes a scenario where multiple records from one table can relate to a single record in another table. An example of this would the relationship between a company and its employees, where multiple employees can be employed at a single company.","sidebar":"tutorialSidebar"},"concepts/database/relations/one-to-one":{"id":"concepts/database/relations/one-to-one","title":"One-to-one","description":"One-to-one (1n) relation.","sidebar":"tutorialSidebar"},"concepts/database/relations/referential-actions":{"id":"concepts/database/relations/referential-actions","title":"Referential actions","description":"In Serverpod, the behavior of update and delete for relations can be precisely defined using the onUpdate and onDelete properties. These properties map directly to the corresponding referential actions in PostgreSQL.","sidebar":"tutorialSidebar"},"concepts/database/relations/self-relations":{"id":"concepts/database/relations/self-relations","title":"Self-relations","description":"A self-referential or self-relation occurs when a table has a foreign key that references its own primary key within the same table. This creates a relationship between different rows within the same table.","sidebar":"tutorialSidebar"},"concepts/database/runtime-parameters":{"id":"concepts/database/runtime-parameters","title":"Runtime parameters","description":"Runtime parameters in Serverpod allow you to fine-tune the behavior of the database engine for specific queries or workloads. This can significantly improve performance, especially for complex queries or large datasets.","sidebar":"tutorialSidebar"},"concepts/database/sort":{"id":"concepts/database/sort","title":"Sort","description":"It is often desirable to order the results of a database query. The \'find\' method has an orderBy parameter where you can specify a column for sorting. The parameter takes a callback as an argument that passes a model-specific table descriptor, also accessible through the t field on the model. The table descriptor represents the database table associated with the model and includes fields for each corresponding column. The callback is then used to specify the column to sort by.","sidebar":"tutorialSidebar"},"concepts/database/transactions":{"id":"concepts/database/transactions","title":"Transactions","description":"The essential point of a database transaction is that it bundles multiple steps into a single, all-or-nothing operation. The intermediate states between the steps are not visible to other concurrent transactions, and if some failure occurs that prevents the transaction from completing, then none of the steps affect the database at all.","sidebar":"tutorialSidebar"},"concepts/exceptions":{"id":"concepts/exceptions","title":"Error handling and exceptions","description":"Handling errors well is essential when you are building your server. To simplify things, Serverpod allows you to throw an exception on the server, serialize it, and catch it in your client app.","sidebar":"tutorialSidebar"},"concepts/experimental":{"id":"concepts/experimental","title":"Experimental features","description":"Be cautious when using experimental features in production environments, as their stability is uncertain and they may receive breaking changes in upcoming releases.","sidebar":"tutorialSidebar"},"concepts/file-uploads":{"id":"concepts/file-uploads","title":"Uploading files","description":"Serverpod has built-in support for handling file uploads. Out of the box, your server is configured to use the database for storing files. This works well for testing but may not be performant in larger-scale applications. You should set up your server to use Google Cloud Storage or S3 in production scenarios.","sidebar":"tutorialSidebar"},"concepts/health-checks":{"id":"concepts/health-checks","title":"Health checks","description":"Serverpod automatically performs health checks while running. It measures CPU and memory usage and the response time to the database. The metrics are stored in the database every minute in the serverpodhealthmetric and serverpodhealthconnection_info tables. However, the best way to visualize the data is through Serverpod Insights, which gives you a graphical view.","sidebar":"tutorialSidebar"},"concepts/logging":{"id":"concepts/logging","title":"Logging","description":"Serverpod uses the database for storing logs; this makes it easy to search for errors, slow queries, or debug messages. To log custom messages during the execution of a session, use the log method of the session object. When the session is closed, either from successful execution or by failing from throwing an exception, the messages are written to the log. By default, session log entries are written for every completed session.","sidebar":"tutorialSidebar"},"concepts/models":{"id":"concepts/models","title":"Working with models","description":"Models are Yaml files used to define serializable classes in Serverpod. They are used to generate Dart code for the server and client, and, if a database table is defined, to generate database code for the server.","sidebar":"tutorialSidebar"},"concepts/modules":{"id":"concepts/modules","title":"Modules","description":"Serverpod is built around the concept of modules. A Serverpod module is similar to a Dart package but contains both server, client, and Flutter code. A module contains its own namespace for endpoints and methods to minimize the risk of conflicts.","sidebar":"tutorialSidebar"},"concepts/scheduling":{"id":"concepts/scheduling","title":"Scheduling","description":"With Serverpod you can schedule future work with the future call feature. Future calls are calls that will be invoked at a later time. An example is if you want to send a drip-email campaign after a user signs up. You can schedule a future call for a day, a week, or a month. The calls are stored in the database, so they will persist even if the server is restarted.","sidebar":"tutorialSidebar"},"concepts/security-configuration":{"id":"concepts/security-configuration","title":"Security Configuration","description":"In a production environment, TLS termination is normally handled by a load balancer or reverse proxy (e.g., Nginx, AWS ALB, or Cloudflare).","sidebar":"tutorialSidebar"},"concepts/serialization":{"id":"concepts/serialization","title":"Custom serialization","description":"For most purposes, you will want to use Serverpod\'s native serialization. However, there may be cases where you want to serialize more advanced objects. With Serverpod, you can pass any serializable objects as long as they conform to three simple rules:","sidebar":"tutorialSidebar"},"concepts/server-events":{"id":"concepts/server-events","title":"Server events","description":"Serverpod framework comes with a built-in event messaging system. This enables efficient message exchange within and across servers, making it ideal for scenarios where shared state is needed, such as coordinating streams or managing data across a server cluster.","sidebar":"tutorialSidebar"},"concepts/sessions":{"id":"concepts/sessions","title":"Sessions","description":"A Session in Serverpod is a request-scoped context object that exists for the duration of a single client request or connection. It provides access to server resources and maintains state during request processing.","sidebar":"tutorialSidebar"},"concepts/streams":{"id":"concepts/streams","title":"Streams","description":"For some applications, it\'s not enough to be able to call server-side methods. You may also want to push data from the server to the client or send data two-way. Examples include real-time games or chat applications. Luckily, Serverpod supports a framework for streaming data. It\'s possible to stream any serialized objects to or from any endpoint.","sidebar":"tutorialSidebar"},"concepts/testing/advanced-examples":{"id":"concepts/testing/advanced-examples","title":"Advanced examples","description":"Run unit and integration tests separately","sidebar":"tutorialSidebar"},"concepts/testing/best-practises":{"id":"concepts/testing/best-practises","title":"Best practises","description":"Imports","sidebar":"tutorialSidebar"},"concepts/testing/get-started":{"id":"concepts/testing/get-started","title":"Get started","description":"Serverpod provides simple but feature rich test tools to make testing your backend a breeze.","sidebar":"tutorialSidebar"},"concepts/testing/the-basics":{"id":"concepts/testing/the-basics","title":"The basics","description":"Set up a test scenario","sidebar":"tutorialSidebar"},"concepts/webserver":{"id":"concepts/webserver","title":"Web server","description":"In addition to the application server, Serverpod comes with a built-in web server. The web server allows you to access your database and business layer the same way you would from a method call from an app. This makes it very easy to share data for applications that need both an app and traditional web pages. You can also use the web server to create webhooks or generate custom REST APIs to communicate with 3rd party services.","sidebar":"tutorialSidebar"},"concepts/working-with-endpoints":{"id":"concepts/working-with-endpoints","title":"Working with endpoints","description":"Endpoints are the connection points to the server from the client. With Serverpod, you add methods to your endpoint, and your client code will be generated to make the method call. For the code to be generated, you need to place the endpoint file anywhere under the lib directory of your server. Your endpoint should extend the Endpoint class. For methods to be generated, they need to return a typed Future, and its first argument should be a Session object. The Session object holds information about the call being made and provides access to the database.","sidebar":"tutorialSidebar"},"contribute":{"id":"contribute","title":"Roadmap & contributions","description":"Serverpod is built by the community, for the community. We believe the best software comes from collaboration, where many people contribute their ideas and skills. That\'s why we strive to make contributing as easy as possible and share our plans for future development in our public roadmap.","sidebar":"tutorialSidebar"},"deployments/community-supported-deployments":{"id":"deployments/community-supported-deployments","title":"Community-supported deployments","description":"Serverpod can be deployed in multiple ways, and the community has developed tools to simplify the process. While these tools are not officially maintained by the Serverpod team, they can be a great starting point for getting your server up and running quickly.","sidebar":"tutorialSidebar"},"deployments/deploying-to-aws":{"id":"deployments/deploying-to-aws","title":"AWS EC2 with Terraform","description":"Serverpod makes it easy to deploy your server to AWS using Github and Terraform. Terraform will set up and manage your infrastructure while you use Github actions to manage versions and deployments. Creating your project using serverpod create Serverpod will automatically generate your deployment scripts. The default setup uses a minimal configuration that will fit within the AWS free tier, but you can easily modify the configuration to suit your needs.","sidebar":"tutorialSidebar"},"deployments/deploying-to-gce-terraform":{"id":"deployments/deploying-to-gce-terraform","title":"Google Cloud Engine with Terraform","description":"Serverpod makes deploying your server to Cloud Engine easy using Github, Terraform, and Docker containers. Terraform will set up and manage your infrastructure while you use Github to build your Docker container and manage versions and deployments. Creating your project using serverpod create will automatically generate your deployment scripts. The default setup creates a minimal configuration, but you can easily modify the configuration to suit your needs.","sidebar":"tutorialSidebar"},"deployments/deploying-to-gcr-console":{"id":"deployments/deploying-to-gcr-console","title":"Google Cloud Run with CGP Console","description":"If your server does not maintain a state and you aren\'t using future calls, running your Serverpod on Google Cloud Run can be a great option. Cloud Run is the easiest way to deploy your server but may be less flexible as your application grows. Check the Choosing deployment strategy page for more information on choosing the best solution for your needs.","sidebar":"tutorialSidebar"},"deployments/deployment-strategy":{"id":"deployments/deployment-strategy","title":"Choosing deployment strategy","description":"There are different options for hosting Serverpod. The minimal requirements are a single server or a serverless managed platform like Google Cloud Run and a Postgres database. Which setup you choose depends on the requirements of your architecture.","sidebar":"tutorialSidebar"},"deployments/general":{"id":"deployments/general","title":"Hosting elsewhere","description":"You can host Serverpod anywhere, running Dart directly or through a Docker container. This page contains helpful information if you want to deploy Serverpod on a custom platform.","sidebar":"tutorialSidebar"},"get-started/creating-endpoints":{"id":"get-started/creating-endpoints","title":"Creating endpoint methods","description":"With Serverpod, calling an endpoint method in your server is as simple as calling a local method in your app. Let\'s create your first custom endpoint method and call it from the Flutter app. In this example, you will create a method that generates recipes from ingredients you may have in your fridge. Your server will talk with Google\'s Gemini API to make this magic happen. You will then call your endpoint method from the Flutter app and display the recipe.","sidebar":"tutorialSidebar"},"get-started/deployment":{"id":"get-started/deployment","title":"Deploying Serverpod","description":"Server requirements","sidebar":"tutorialSidebar"},"get-started/models-and-data":{"id":"get-started/models-and-data","title":"Models and data","description":"Serverpod ships with a powerful data modeling system that uses easy-to-read definition files in YAML. It generates Dart classes with all the necessary code to serialize and deserialize the data and connect to the database. This allows you to define your data models for the server and the app in one place, eliminating any inconsistencies. The models give you fine-grained control over the visibility of properties and how they interact with each other.","sidebar":"tutorialSidebar"},"get-started/working-with-the-database":{"id":"get-started/working-with-the-database","title":"Working with the database","description":"In this section, we will build upon the models we created in the previous section and add a database to store the recipes that users create in the app. This will allow our application to persist data between sessions.","sidebar":"tutorialSidebar"},"index":{"id":"index","title":"Installation","description":"Serverpod is an open-source, scalable backend framework built specifically for Flutter developers. It allows you to use Dart for your entire stack, simplifying development and reducing context-switching.","sidebar":"tutorialSidebar"},"overview":{"id":"overview","title":"Overview","description":"Serverpod is an open-source backend framework for Flutter applications written in Dart. It aims to minimize boilerplate and integrate many common backend tasks out of the box. With Serverpod, Flutter developers can build secure, scalable server applications using the same language and tools as their client apps, benefiting from seamless code generation and a rich set of built-in capabilities.","sidebar":"tutorialSidebar"},"serverpod-mini":{"id":"serverpod-mini","title":"Serverpod Mini","description":"Serverpod or Serverpod Mini?","sidebar":"tutorialSidebar"},"support":{"id":"support","title":"Support & community","description":"Welcome to the Serverpod community! We offer several ways to get help, stay informed, and connect with other developers.","sidebar":"tutorialSidebar"},"tools/insights":{"id":"tools/insights","title":"Serverpod Insights","description":"Serverpod has a companion app. It is currently available for Mac and Windows, but Linux is coming soon. The app has support for viewing your server\'s logs and health metrics, but we are adding many more features in version 1.2. You must use a version of the app that matches the version of Serverpod you use in your project, or not all features may work correctly.","sidebar":"tutorialSidebar"},"tools/lsp":{"id":"tools/lsp","title":"LSP server","description":"The Language Server Protocol (LSP) is a standardized protocol designed to provide development environments with language-specific functionalities. In the context of Serverpod, the LSP server specifically offers diagnostics for YAML protocol files, aiding developers in identifying and resolving potential issues within these files.","sidebar":"tutorialSidebar"},"tutorials/academy":{"id":"tutorials/academy","title":"Serverpod Academy","description":"Welcome to Serverpod Academy. This is your gateway to mastering Serverpod through structured, hands-on learning experiences.","sidebar":"tutorialSidebar"},"tutorials/guides/authentication":{"id":"tutorials/guides/authentication","title":"Authentication","description":"Our comprehensive Authentication series is designed to guide you seamlessly through the process of setting up and utilizing the auth module within Serverpod. Each part of this series is tailored to introduce and explain different aspects of authentication, aiming to make it a straightforward process, regardless of your experience level. We recommend starting with the first one to complete the setup of the auth module before moving on to specific providers.","sidebar":"tutorialSidebar"},"tutorials/tutorials/ai-and-rag":{"id":"tutorials/tutorials/ai-and-rag","title":"Integrating AI & RAG","description":"Are you curious about how best to include AI in your Flutter app? In this talk, we will explore how you can use Serverpod to stream content generated by Gemini to your Flutter app in real-time. We will also dive into calling the Gemini APIs from Dart and linking them to your custom knowledge database using retrieval-augmented generation (RAG) and a vector database. We build a practical example where you can chat with the Flutter and Serverpod documentation, pulling in data from official docs, issues, and discussions on GitHub.","sidebar":"tutorialSidebar"},"tutorials/tutorials/fundamentals":{"id":"tutorials/tutorials/fundamentals","title":"Backend fundamentals","description":"This video explains the fundamentals of backend development, how a database works, and how to get started with Serverpod. It is a great starting point for a Flutter developer new to working with backends and servers.","sidebar":"tutorialSidebar"},"tutorials/tutorials/real-time-communication":{"id":"tutorials/tutorials/real-time-communication","title":"Real-time communication","description":"Have you ever found real-time communication in apps challenging? It doesn\'t have to be. Today, we\'re diving into how to build a collaborative drawing experience using Flutter and Serverpod. We\'ll call our app Pixorama\u200a-\u200aa fun and interactive project inspired by Reddit\'s r/place. Pixorama lets users draw together on a shared grid, with every pixel placed updating in real-time across all connected devices.","sidebar":"tutorialSidebar"},"upgrading/upgrade-from-mini":{"id":"upgrading/upgrade-from-mini","title":"Upgrade from Mini to full","description":"If you have started with Serverpod Mini, you can upgrade to the full Serverpod version anytime. Before you upgrade, it\'s good practice to back up your project, as some configuration files can be overwritten if you have manually created them.","sidebar":"tutorialSidebar"},"upgrading/upgrade-to-one-point-two":{"id":"upgrading/upgrade-to-one-point-two","title":"Upgrade to 1.2","description":"Serverpod 1.2. is backward compatible with Serverpod 1.0 and Serverpod 1.1. There are a few changes to the database layer, meaning you probably want to use the new methods. The old methods still works, but have been deprecated and will be permanently removed with the upcoming version 2.","sidebar":"tutorialSidebar"},"upgrading/upgrade-to-pgvector":{"id":"upgrading/upgrade-to-pgvector","title":"Upgrading to pgvector support","description":"New Serverpod projects automatically include pgvector support through the pgvector/pgvector PostgreSQL Docker image. However, existing projects need to be upgraded to use vector functionality.","sidebar":"tutorialSidebar"},"upgrading/upgrade-to-three":{"id":"upgrading/upgrade-to-three","title":"Upgrade to 3.0","description":"Web Server: Widget to Component Rename","sidebar":"tutorialSidebar"},"upgrading/upgrade-to-two":{"id":"upgrading/upgrade-to-two","title":"Upgrade to 2.0","description":"Changes to authentication","sidebar":"tutorialSidebar"},"upgrading/upgrade-to-two-point-two":{"id":"upgrading/upgrade-to-two-point-two","title":"Upgrade to 2.2","description":"Serverpod 2.2 includes new test tools that make it easy to create tests for endpoint methods. For new projects they are configured by default, but existing projects need to go through some steps to enable it (see below). The full documentation of this feature can also be found here.","sidebar":"tutorialSidebar"}}}}')}}]);