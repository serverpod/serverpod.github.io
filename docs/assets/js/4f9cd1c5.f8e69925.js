"use strict";(self.webpackChunkserverpod_docs=self.webpackChunkserverpod_docs||[]).push([[8262],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=u(n),m=i,h=d["".concat(s,".").concat(m)]||d[m]||c[m]||r;return n?a.createElement(h,o(o({ref:t},p),{},{components:n})):a.createElement(h,o({ref:t},p))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var u=2;u<r;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9182:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return c}});var a=n(7462),i=n(3366),r=(n(7294),n(3905)),o=["components"],l={},s="Email",u={unversionedId:"concepts/authentication/providers/email",id:"concepts/authentication/providers/email",title:"Email",description:"To properly configure Sign in with Email, you must connect your Serverpod to an external service that can send the emails. One convenient option is the mailer package, which can send emails through any SMTP service. Most email providers, such as Sendgrid or Mandrill, support SMTP.",source:"@site/docs/05-concepts/09-authentication/04-providers/01-email.md",sourceDirName:"05-concepts/09-authentication/04-providers",slug:"/concepts/authentication/providers/email",permalink:"/next/concepts/authentication/providers/email",editUrl:"https://github.com/serverpod/serverpod_docs/tree/main/docs/05-concepts/09-authentication/04-providers/01-email.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Working with users",permalink:"/next/concepts/authentication/working-with-users"},next:{title:"Google",permalink:"/next/concepts/authentication/providers/google"}},p={},c=[{value:"Server-side Configuration",id:"server-side-configuration",level:2},{value:"Client-side Configuration",id:"client-side-configuration",level:2},{value:"Prebuilt SignIn Button",id:"prebuilt-signin-button",level:3},{value:"Modal example",id:"modal-example",level:3},{value:"Custom UI with EmailAuthController",id:"custom-ui-with-emailauthcontroller",level:2}],d={toc:c};function m(e){var t=e.components,l=(0,i.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"email"},"Email"),(0,r.kt)("p",null,"To properly configure Sign in with Email, you must connect your Serverpod to an external service that can send the emails. One convenient option is the ",(0,r.kt)("a",{parentName:"p",href:"https://pub.dev/packages/mailer"},"mailer")," package, which can send emails through any SMTP service. Most email providers, such as Sendgrid or Mandrill, support SMTP."),(0,r.kt)("p",null,"A comprehensive tutorial covering email/password sign-in complete with sending the validation code via email is available ",(0,r.kt)("a",{parentName:"p",href:"https://medium.com/serverpod/getting-started-with-serverpod-authentication-part-1-72c25280e6e9"},"here"),"."),(0,r.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"You need to install the auth module before you continue, see ",(0,r.kt)("a",{parentName:"p",href:"../setup"},"Setup"),"."))),(0,r.kt)("h2",{id:"server-side-configuration"},"Server-side Configuration"),(0,r.kt)("p",null,"In your main ",(0,r.kt)("inlineCode",{parentName:"p"},"server.dart")," file,  import the ",(0,r.kt)("inlineCode",{parentName:"p"},"serverpod_auth_server")," module, and set up the authentication configuration:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"import 'package:serverpod_auth_server/module.dart' as auth;\n\nauth.AuthConfig.set(auth.AuthConfig(\n  sendValidationEmail: (session, email, validationCode) async {\n    // Send the validation email to the user.\n    // Return `true` if the email was successfully sent, otherwise `false`.\n    return true;\n  },\n  sendPasswordResetEmail: (session, userInfo, validationCode) async {\n    // Send the password reset email to the user.\n    // Return `true` if the email was successfully sent, otherwise `false`.\n    return true;\n  },\n));\n\n// Start the Serverpod server.\nawait pod.start();\n")),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"For debugging purposes, you can print the validation code to the console. The chat module example does just this. You can view that code ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/serverpod/serverpod/blob/main/examples/chat/chat_server/lib/server.dart"},"here"),"."))),(0,r.kt)("h2",{id:"client-side-configuration"},"Client-side Configuration"),(0,r.kt)("p",null,"Add the dependencies to your ",(0,r.kt)("inlineCode",{parentName:"p"},"pubspec.yaml")," in your ",(0,r.kt)("strong",{parentName:"p"},"client")," project."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"dependencies:\n  ...\n  serverpod_auth_client: ^1.x.x\n")),(0,r.kt)("p",null,"Add the dependencies to your ",(0,r.kt)("inlineCode",{parentName:"p"},"pubspec.yaml")," in your ",(0,r.kt)("strong",{parentName:"p"},"Flutter")," project."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"dependencies:\n  ...\n  serverpod_auth_email_flutter: ^1.x.x\n  serverpod_auth_shared_flutter: ^1.x.x\n")),(0,r.kt)("h3",{id:"prebuilt-signin-button"},"Prebuilt SignIn Button"),(0,r.kt)("p",null,"The package includes both methods for creating a custom email sign-in form and a pre-made ",(0,r.kt)("inlineCode",{parentName:"p"},"SignInWithEmailButton")," widget. The widget is easy to use, all you have to do is supply the auth client. It handles everything from user signups, login, and password resets for you."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"}," SignInWithEmailButton(\n  caller: client.modules.auth,\n  onSignedIn: () {\n    // Optional callback when user successfully signs in\n  },\n),\n")),(0,r.kt)("p",null,(0,r.kt)("img",{loading:"lazy",alt:"SignInWithEmailButton",src:n(5433).Z,width:"542",height:"124"})),(0,r.kt)("h3",{id:"modal-example"},"Modal example"),(0,r.kt)("p",null,"The triggered modal will look like this:"),(0,r.kt)("p",null,(0,r.kt)("img",{loading:"lazy",alt:"SignInWithEmailDialog",src:n(1655).Z,width:"802",height:"736"})),(0,r.kt)("h2",{id:"custom-ui-with-emailauthcontroller"},"Custom UI with EmailAuthController"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"serverpod_auth_email_flutter")," module provides the ",(0,r.kt)("inlineCode",{parentName:"p"},"EmailAuthController")," class, which encapsulates the functionality for email/password authentication. You can use this class and create a custom UI for user registration, login, and password management."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"import 'package:serverpod_auth_email_flutter/serverpod_auth_email_flutter.dart';\n\nfinal authController = EmailAuthController(client.modules.auth);\n")),(0,r.kt)("p",null,"To let a user signup first call the ",(0,r.kt)("inlineCode",{parentName:"p"},"createAccountRequest")," method which will trigger the backend to send an email to the user with the validation code."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"await authController.createAccountRequest(userName, email, password);\n")),(0,r.kt)("p",null,"Then let the user type in the code and send it to the backend with the ",(0,r.kt)("inlineCode",{parentName:"p"},"validateAccount")," method. This method will create the user and sign them in if the code is valid."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"await authController.validateAccount(email, verificationCode);\n")),(0,r.kt)("p",null,"To let users log in if they already have an account you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"signIn")," method."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"await authController.signIn(email, password);\n")),(0,r.kt)("p",null,"Finally to let a user reset their password you first initiate a password reset with the ",(0,r.kt)("inlineCode",{parentName:"p"},"initiatePasswordReset")," this will trigger the backend to send a verification email to the user."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"await authController.initiatePasswordReset(email);\n")),(0,r.kt)("p",null,"Let the user type in the verification code along with the new password and send it to the backend with the ",(0,r.kt)("inlineCode",{parentName:"p"},"resetPassword")," method."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"await authController.resetPassword(email, verificationCode, password);\n")),(0,r.kt)("p",null,"After the password has been reset you have to call the ",(0,r.kt)("inlineCode",{parentName:"p"},"signIn")," method to log in. This can be achieved by either letting the user type in the details again or simply chaining the ",(0,r.kt)("inlineCode",{parentName:"p"},"resetPassword")," method and the ",(0,r.kt)("inlineCode",{parentName:"p"},"singIn")," method for a seamless UX."))}m.isMDXComponent=!0},5433:function(e,t,n){t.Z=n.p+"assets/images/1-sign-in-with-email-button-806454adfce788284d1f0ac766c36840.png"},1655:function(e,t,n){t.Z=n.p+"assets/images/2-auth-email-dialog-6bbfac8235385603c5199bf4e7bfaac5.png"}}]);