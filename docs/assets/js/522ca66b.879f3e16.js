"use strict";(self.webpackChunkserverpod_docs=self.webpackChunkserverpod_docs||[]).push([[25666],{22946:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"concepts/authentication/providers/firebase","title":"Firebase","description":"Serverpod uses FlutterFire UI to handle authentication through Firebase. It allows you to add social sign-in types that Serverpod doesn\'t directly support.","source":"@site/versioned_docs/version-1.1.1/05-concepts/09-authentication/04-providers/05-firebase.md","sourceDirName":"05-concepts/09-authentication/04-providers","slug":"/concepts/authentication/providers/firebase","permalink":"/1.1.1/concepts/authentication/providers/firebase","draft":false,"unlisted":false,"editUrl":"https://github.com/serverpod/serverpod_docs/tree/main/versioned_docs/version-1.1.1/05-concepts/09-authentication/04-providers/05-firebase.md","tags":[],"version":"1.1.1","sidebarPosition":5,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Apple","permalink":"/1.1.1/concepts/authentication/providers/apple"},"next":{"title":"Uploading files","permalink":"/1.1.1/concepts/file-uploads"}}');var s=o(74848),n=o(28453);const i={},a="Firebase",c={},d=[];function l(e){const t={a:"a",admonition:"admonition",h1:"h1",header:"header",p:"p",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"firebase",children:"Firebase"})}),"\n",(0,s.jsx)(t.p,{children:"Serverpod uses FlutterFire UI to handle authentication through Firebase. It allows you to add social sign-in types that Serverpod doesn't directly support."}),"\n",(0,s.jsxs)(t.p,{children:["To add authentication with Firebase, you must first install and initialize the Firebase CLI tools and Flutter fire. Follow the instructions ",(0,s.jsx)(t.a,{href:"https://firebase.google.com/docs/flutter/setup?platform=web",children:"here"})," for your Flutter project. In the Firebase console, configure the different social sign-ins you plan to use. Then pass your provider configurations to either the signInWithFirebase method or the SignInWithFirebaseButton of the ",(0,s.jsx)(t.a,{href:"https://pub.dev/packages/serverpod_auth_firebase_flutter",children:"serverpod_auth_firebase_flutter"})," package."]}),"\n",(0,s.jsxs)(t.p,{children:["Server-side, you need to create a set of authentication keys in the ",(0,s.jsx)(t.a,{href:"https://console.firebase.google.com/",children:"Firebase console"}),", download the JSON file, rename it to firebase_service_account_key.json and place it in the config folder."]}),"\n",(0,s.jsx)(t.admonition,{type:"warning",children:(0,s.jsx)(t.p,{children:"Serverpod automatically merges accounts that are using the same email addresses, so make sure only to allow sign-ins where the email has been verified."})})]})}function p(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,t,o)=>{o.d(t,{R:()=>i,x:()=>a});var r=o(96540);const s={},n=r.createContext(s);function i(e){const t=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(n.Provider,{value:t},e.children)}}}]);