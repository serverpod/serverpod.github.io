"use strict";(self.webpackChunkserverpod_docs=self.webpackChunkserverpod_docs||[]).push([[6837],{41481:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var n=s(85893),a=s(11151);const r={},o="Raw access",c={id:"concepts/database/raw-access",title:"Raw access",description:"Sometimes more advanced tasks need to be performed on the database. For those occasions, it's possible to run raw SQL queries on the database.",source:"@site/docs/05-concepts/06-database/10-raw-access.md",sourceDirName:"05-concepts/06-database",slug:"/concepts/database/raw-access",permalink:"/next/concepts/database/raw-access",draft:!1,unlisted:!1,editUrl:"https://github.com/serverpod/serverpod_docs/tree/main/docs/05-concepts/06-database/10-raw-access.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Pagination",permalink:"/next/concepts/database/pagination"},next:{title:"Migrations",permalink:"/next/concepts/database/migrations"}},i={},d=[];function l(e){const t={admonition:"admonition",code:"code",h1:"h1",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"raw-access",children:"Raw access"}),"\n",(0,n.jsx)(t.p,{children:"Sometimes more advanced tasks need to be performed on the database. For those occasions, it's possible to run raw SQL queries on the database."}),"\n",(0,n.jsxs)(t.p,{children:["Use the ",(0,n.jsx)(t.code,{children:"unsafeQuery"})," method when querying for simple data. The method returns a ",(0,n.jsx)(t.code,{children:"List<List<dynamic>>"})," with rows and columns and is useful if you want a simple result without joining any data."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-dart",children:"PostgreSQLResult result = await session.dbNext.unsafeQuery(\n  'SELECT * FROM mytable WHERE id = 1',\n);\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Use the ",(0,n.jsx)(t.code,{children:"unsafeQueryMappedResults"})," method when making complex queries with joins. The method returns a ",(0,n.jsx)(t.code,{children:"List<Map<String, Map<String, dynamic>>>"}),", where the ",(0,n.jsx)(t.code,{children:"List"})," contains an entry for each result row. The result row is a ",(0,n.jsx)(t.code,{children:"Map"})," where the key is the table from which the data has been retrieved and the value is another ",(0,n.jsx)(t.code,{children:"Map"})," of that tables columns. The column ",(0,n.jsx)(t.code,{children:"Map"})," inside the table ",(0,n.jsx)(t.code,{children:"Map"})," has column names as keys and the contents of the colum as values."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-dart",children:"[\n  row {\n    table {\n      column: content,\n    },\n  },\n]\n"})}),"\n",(0,n.jsx)(t.p,{children:"Above is a visual aid of the data structure."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-dart",children:"List<Map<String, Map<String, dynamic>>> result = await session.dbNext.unsafeQueryMappedResults(\n  'SELECT * FROM mytable LEFT JOIN othertable ON mytable.id = othertable.mytableid',\n);\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Use the ",(0,n.jsx)(t.code,{children:"unsafeExecute"})," method when no result is needed. The return value represents the number of rows that changed."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-dart",children:"int result = await session.dbNext.unsafeExecute(\n  'DELETE FROM mytable WHERE id = 1',\n);\n"})}),"\n",(0,n.jsxs)(t.p,{children:["in the above example, the ",(0,n.jsx)(t.code,{children:"result"})," variable will contain the number of rows that were deleted."]}),"\n",(0,n.jsx)(t.admonition,{type:"danger",children:(0,n.jsx)(t.p,{children:"Always sanitize your input when using the raw query methods, otherwise, this becomes an attack vector for SQL injections."})})]})}function h(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},11151:(e,t,s)=>{s.d(t,{Z:()=>c,a:()=>o});var n=s(67294);const a={},r=n.createContext(a);function o(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);